{
	"name": "pipeline1",
	"properties": {
		"activities": [
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lookup1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup1').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "Set variable IdParameter",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "IdParameter",
								"value": {
									"value": "@string(item().id)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "API - Conversaciones",
							"type": "WebActivity",
							"dependsOn": [
								{
									"activity": "Set variable IdParameter",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"method": "GET",
								"headers": {
									"Authorization": {
										"value": "@concat('Basic ', base64('yBjVC7W3wuMLeucdH4Hw:X'))",
										"type": "Expression"
									}
								},
								"disableCertValidation": false,
								"url": {
									"value": "@concat('https://autocorpar.freshdesk.com/api/v2/tickets/',item().id,'/conversations')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set variable vTicketsId",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "API - Conversaciones",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "vTicket_id",
								"value": {
									"value": "@json(activity('API - Conversaciones').output.Response)\n\n",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Set Variable Key",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Set variable vTicketsId",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "Key",
								"value": {
									"value": "@variables('vTicket_id')[0].ticket_id",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Script Insert Conversaciones DW",
							"type": "Script",
							"dependsOn": [
								{
									"activity": "Set variable vTicketsId",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "SqlAutocorpDw",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "Query",
										"text": {
											"value": "@concat('insert into dbo.conversaciones (id, created_at, updated_at) values (',variables('vTicket_id')[0].ticket_id,\n    pipeline().parameters.DelimitadorComa,\n    pipeline().parameters.DelimitarioCommilaSimple,\n    variables('vTicket_id')[0].created_at,\n    pipeline().parameters.DelimitadorComa,\n    pipeline().parameters.DelimitarioCommilaSimple,\n    variables('vTicket_id')[0].updated_at,\n    pipeline().parameters.DelimitarioCommilaSimple,')')",
											"type": "Expression"
										}
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						}
					]
				}
			},
			{
				"name": "Lookup1",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureMySqlSource",
						"query": "SELECT distinct id FROM freshdesk_tickets \r\nWHERE created_at >  DATE_SUB(CURDATE(), INTERVAL 40 DAY)",
						"queryTimeout": "02:00:00"
					},
					"dataset": {
						"referenceName": "FreshTickets",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			}
		],
		"parameters": {
			"DelimitarioCommilaSimple": {
				"type": "string",
				"defaultValue": "'"
			},
			"DelimitadorComa": {
				"type": "string",
				"defaultValue": ","
			}
		},
		"variables": {
			"IdParameter": {
				"type": "String"
			},
			"vTicket_id": {
				"type": "Array"
			},
			"Key": {
				"type": "Integer"
			},
			"createDate": {
				"type": "Array"
			},
			"VError": {
				"type": "String"
			}
		},
		"annotations": []
	}
}