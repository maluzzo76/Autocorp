{
	"name": "003-Inyecar_Hechos_Fresh_To_Staiging",
	"properties": {
		"activities": [
			{
				"name": "Inyectar_SLA_API",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "upsert",
						"upsertSettings": {
							"useTempDB": true,
							"keys": [
								"codigo"
							]
						},
						"sqlWriterUseTableLock": false,
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "$['id']"
								},
								"sink": {
									"name": "codigo",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['name']"
								},
								"sink": {
									"name": "nombre",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['description']"
								},
								"sink": {
									"name": "descipcion",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['active']"
								},
								"sink": {
									"name": "isactive",
									"type": "Boolean"
								}
							},
							{
								"source": {
									"path": "$['sla_target']['priority_4']['respond_within']"
								},
								"sink": {
									"name": "slaTargetPriority4RespondWithin",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"path": "$['sla_target']['priority_4']['resolve_within']"
								},
								"sink": {
									"name": "slaTargerPriority4ResolveWithin",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"path": "$['sla_target']['priority_3']['respond_within']"
								},
								"sink": {
									"name": "slaTargetPriority3RespondWithin",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"path": "$['sla_target']['priority_3']['resolve_within']"
								},
								"sink": {
									"name": "slaTargerPriority3ResolveWithin",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"path": "$['sla_target']['priority_2']['respond_within']"
								},
								"sink": {
									"name": "slaTargetPriority2RespondWithin",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"path": "$['sla_target']['priority_2']['resolve_within']"
								},
								"sink": {
									"name": "slaTargerPriority2ResolveWithin",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"path": "$['sla_target']['priority_1']['respond_within']"
								},
								"sink": {
									"name": "slaTargetPriority1RespondWithin",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"path": "$['sla_target']['priority_1']['resolve_within']"
								},
								"sink": {
									"name": "slaTargerPriority1ResolveWithin",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"path": "$['escalation']['reminder_resolution']['agent_ids'][0]"
								},
								"sink": {
									"name": "escalationReminderResolutionAgentids",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['escalation']['resolution']['level_1']['agent_ids'][0]"
								},
								"sink": {
									"name": "escalationResolutionLevel1AgentId",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['applicable_to']['company_ids'][0]"
								},
								"sink": {
									"name": "companyid",
									"type": "String"
								}
							}
						],
						"collectionReference": ""
					}
				},
				"inputs": [
					{
						"referenceName": "Fresh_SLA",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "dimSla",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Inyectar_Tickets_Fresh",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Inyectar_SLA_API",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureMySqlSource",
						"query": "select DISTINCT\nt.id,\ncreated_at,\nupdated_at,\ntimestampdiff(HOUR,created_at,updated_at) AS `hours_between`,\ntimestampdiff(MINUTE,created_at,updated_at) AS `minutes_between`,\nCAST(company_id AS SIGNED)  as companiaCodigo,\ncast(`status` as SIGNED) as estadoCodigo, \ncast(`type` as SIGNED) as tipoCodigo, \ncast(tt.id as SIGNED) as tipoid,\ncast(product_id as SIGNED) as productoCodigo, \ncast(group_id as SIGNED)as grupoCodigo, \ncast(`source` as SIGNED) as origenCodigo,\ncast(`priority` as SIGNED) as prioridadCodigo,\ncast(`responder_id` as SIGNED) as agenteCodigo\nfrom freshdesk_tickets t\nleft join ticket_type tt on tt.name = t.type",
						"queryTimeout": "02:00:00"
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "upsert",
						"upsertSettings": {
							"useTempDB": true,
							"keys": [
								"codigo"
							]
						},
						"sqlWriterUseTableLock": false,
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "id",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "codigo",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "created_at",
									"type": "String",
									"physicalType": "text"
								},
								"sink": {
									"name": "fechaAlta",
									"type": "DateTime",
									"physicalType": "datetime"
								}
							},
							{
								"source": {
									"name": "updated_at",
									"type": "String",
									"physicalType": "text"
								},
								"sink": {
									"name": "fechaModificacion",
									"type": "DateTime",
									"physicalType": "datetime"
								}
							},
							{
								"source": {
									"name": "hours_between",
									"type": "Int64"
								},
								"sink": {
									"name": "horasDiferecia",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "minutes_between",
									"type": "Int64"
								},
								"sink": {
									"name": "minutosDiferencia",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "companiaCodigo",
									"type": "Double"
								},
								"sink": {
									"name": "companiaCodigo",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "estadoCodigo",
									"type": "Int32"
								},
								"sink": {
									"name": "estadoCodigo",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "tipoCodigo",
									"type": "String"
								},
								"sink": {
									"name": "tipoCodigo",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "productoCodigo",
									"type": "String"
								},
								"sink": {
									"name": "productoCodigo",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "grupoCodigo",
									"type": "Double"
								},
								"sink": {
									"name": "grupoCodigo",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "origenCodigo",
									"type": "Int32"
								},
								"sink": {
									"name": "origenCodigo",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "prioridadCodigo",
									"type": "Int32"
								},
								"sink": {
									"name": "prioridadCodigo",
									"type": "Int32",
									"physicalType": "int"
								}
							},
							{
								"source": {
									"name": "agenteCodigo",
									"type": "Double"
								},
								"sink": {
									"name": "agenteCodigo",
									"type": "Int32",
									"physicalType": "int"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "FreshTickets",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "stgTickets",
						"type": "DatasetReference"
					}
				]
			}
		],
		"variables": {
			"Ids": {
				"type": "Array",
				"defaultValue": [
					"['a','b','c']"
				]
			},
			"vId": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2025-01-14T18:54:25Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}