{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Nombre de instancia de Data Factory",
			"defaultValue": "Autocorp"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/stgOrdenesTrabajoTareas')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlAutocorpDw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staiging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "codigo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "codigoWorkOrder",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Tarea",
						"type": "varchar"
					},
					{
						"name": "categoria",
						"type": "varchar"
					},
					{
						"name": "costoPersonal",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "costoMaterial",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "costoTotal",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "costoPersonalSinIva",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "costoMaterialSinIva",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "costoTotalSinIva",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "descuentoPersonal",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "decuentoMaterial",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "decuentoTotal",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "fechaCreacion",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "fechaUltimaActualizacion",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "stg",
					"table": "OrdenesTrabajoTareas"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/stgReservas')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlAutocorpDw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staiging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "hansa_code",
						"type": "varchar"
					},
					{
						"name": "hansa_client_code",
						"type": "varchar"
					},
					{
						"name": "hansa_contact_code",
						"type": "varchar"
					},
					{
						"name": "hansa_plate",
						"type": "varchar"
					},
					{
						"name": "hansa_booking_status",
						"type": "varchar"
					},
					{
						"name": "hansa_booking_type",
						"type": "varchar"
					},
					{
						"name": "start_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "end_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "franchise",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "vehicle_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "client_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "subcontact_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "deleted_at",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "created_at",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "updated_at",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "hansa_related_plate",
						"type": "varchar"
					},
					{
						"name": "related_vehicle_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "initial_km",
						"type": "int",
						"precision": 10
					},
					{
						"name": "last_km",
						"type": "int",
						"precision": 10
					},
					{
						"name": "expected_pickup_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "expected_dropoff_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "actual_pickup_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "actual_dropoff_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "stg",
					"table": "Reservas"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/stgTickets')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlAutocorpDw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staiging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "codigo",
						"type": "varchar"
					},
					{
						"name": "fechaAlta",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "fechaModificacion",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "horasDiferecia",
						"type": "int",
						"precision": 10
					},
					{
						"name": "minutosDiferencia",
						"type": "int",
						"precision": 10
					},
					{
						"name": "companiaCodigo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "estadoCodigo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "tipoCodigo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "productoCodigo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "grupoCodigo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "origenCodigo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "prioridadCodigo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "agenteCodigo",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "stg",
					"table": "Tickets"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/whsReservas')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlAutocorpDw",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "subcontactoid",
						"type": "int",
						"precision": 10
					},
					{
						"name": "vehiculoid",
						"type": "int",
						"precision": 10
					},
					{
						"name": "vehiculorelacionadoid",
						"type": "int",
						"precision": 10
					},
					{
						"name": "hansaid",
						"type": "varchar"
					},
					{
						"name": "inicioreserva",
						"type": "date"
					},
					{
						"name": "finreserva",
						"type": "date"
					},
					{
						"name": "franquisia",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "iniciokm",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ultimokm",
						"type": "int",
						"precision": 10
					},
					{
						"name": "fechaesperadarecogida",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "fechaentregaesperada",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "fechaactualrecogida",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "fechaentregaactual",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "whs",
					"table": "Reservas"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/001-Inyectar Dimensiones Efleet')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Intectar vehiculos",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "select \r\nvehicles.id codigo,\r\ncontract_id contratoId,\r\npolicy_id policyId,\r\n`description` descripcion,\r\n`code` codigoDeVehiculo,\r\ncolor,\r\nchassis,\r\nplate patente,\r\n`year` anio,\r\nvtv_due_date fechaVencimientoVTV,\r\ncardoc_due_date fechaVencimientoDocument,\r\nwarranty_up_to_km garantiaHastaKm,\r\nwarranty_up_to_date fechaActualizadaGarantia,\r\nwarranty_state garantiaEstado,\r\nis_fleet_owner isPropietarioFlota,\r\nlast_km ultimoKilometraje,\r\nlast_km_origin ultimoKilometrajeOrigen,\r\nlast_km_date fechaUltimoKm,\r\nservice_last_km servicioUltimoKm,\r\nservice_origin origenServicio,\r\ncase when year(service_last_date)<1990 then null else service_last_date end ultimaFechaServicio,\r\ncondition_type tipoCondicion,\r\ncategory_client categoriaCliente,\r\ngroup_category_client grupoCategoriaCliente ,\r\nfuel_card_number numeroTarjetaCombustible,\r\ntoll_card_number numeroTarjetaPeaje,\r\nhas_circulation_documents tieneDocumentoCirculacion,\r\ninsurance_ammount montoSeguro,\r\nversion_id versionID,\r\nvehicle_state_id vehiculoEstadoID,\r\nclient_structure_id clienteEstructuraID,\r\ninsurance_id seguroID,\r\ngps_provider_id proveedorGpsId,\r\nhas_duplicated_key tieneClaveDuplicado,\r\ngps_vehicle_number numeroGPS,\r\ngps_detail detalleGPS,\r\ngps_ammount gpsMonto,\r\nvtv_last_date ultimaFechaVTV,\r\nduplicated_key_date fechaClaveDuplicada,\r\nvtv_last_city_id ultimaCiudadVTVID,\r\nplate_city_id patenteCuidadID,\r\ngps_is_visible gpsIsVisible,\r\nowner_name propietario,\r\nowner_contact_id propietarioContactoID,\r\nmaintenance_plan_id planMantenimientoID,\r\nleasing_duedate arrendamientoFechaVencimiento,\r\nrto_due_date fechaDeRetiro,\r\nvtv_km_expiration kmVencimientoVTV,\r\nfuel_provider proveedorCombustible,\r\nservice_last_task_id UltimaTareaID,\r\ninsurance_start_date fechaInicioSeguro,\r\nsend_expiration_mailing ,\r\nvehicles.hansa_code codigoHansa,\r\nlast_expiration_check fechaUltimaComparacion,\r\nvtv_caba_text vtvCabaTexto,\r\ninfoauto_price precioInfoauto,\r\ninfoauto_price_date fechaPrecioInfoAuto,\r\nvs.name estado,\r\nmotor_number\r\n\r\nfrom vehicles\r\nleft outer join vehicle_states vs on vs.id = vehicles.vehicle_state_id",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"codigo"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "codigo",
											"type": "UInt64"
										},
										"sink": {
											"name": "codigo",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "contratoId",
											"type": "UInt64"
										},
										"sink": {
											"name": "contratoId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "policyId",
											"type": "UInt64"
										},
										"sink": {
											"name": "policyId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "descripcion",
											"type": "String"
										},
										"sink": {
											"name": "descripcion",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "codigoDeVehiculo",
											"type": "String"
										},
										"sink": {
											"name": "codigoDeVehiculo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "color",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "color",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "chassis",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "chassis",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "patente",
											"type": "String"
										},
										"sink": {
											"name": "patente",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "anio",
											"type": "Int32"
										},
										"sink": {
											"name": "anio",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "fechaVencimientoVTV",
											"type": "DateTime"
										},
										"sink": {
											"name": "fechaVencimientoVTV",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "fechaVencimientoDocument",
											"type": "DateTime"
										},
										"sink": {
											"name": "fechaVencimientoDocumento",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "garantiaHastaKm",
											"type": "Int32"
										},
										"sink": {
											"name": "garantiaHastaKm",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "fechaActualizadaGarantia",
											"type": "DateTime"
										},
										"sink": {
											"name": "fechaActualizadaGarantia",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "garantiaEstado",
											"type": "Boolean"
										},
										"sink": {
											"name": "garantiaVigente",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "isPropietarioFlota",
											"type": "Boolean"
										},
										"sink": {
											"name": "isPropietarioFlota",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ultimoKilometraje",
											"type": "Int32"
										},
										"sink": {
											"name": "ultimoKilometraje",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "ultimoKilometrajeOrigen",
											"type": "String"
										},
										"sink": {
											"name": "ultimoKilometrajeOrigen",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "fechaUltimoKm",
											"type": "DateTime"
										},
										"sink": {
											"name": "fechaUltimoKm",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "servicioUltimoKm",
											"type": "Int32"
										},
										"sink": {
											"name": "servicioUltimoKm",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "origenServicio",
											"type": "String"
										},
										"sink": {
											"name": "origenServicio",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ultimaFechaServicio",
											"type": "DateTime"
										},
										"sink": {
											"name": "ultimaFechaServicio",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "tipoCondicion",
											"type": "String"
										},
										"sink": {
											"name": "tipoCondicion",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "categoriaCliente",
											"type": "String"
										},
										"sink": {
											"name": "categoriaCliente",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "grupoCategoriaCliente",
											"type": "String"
										},
										"sink": {
											"name": "grupoCategoriaCliente",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "numeroTarjetaCombustible",
											"type": "String"
										},
										"sink": {
											"name": "numeroTarjetaCombustible",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "numeroTarjetaPeaje",
											"type": "String"
										},
										"sink": {
											"name": "numeroTarjetaPeaje",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "tieneDocumentoCirculacion",
											"type": "Boolean"
										},
										"sink": {
											"name": "tieneDocumentoCirculacion",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "montoSeguro",
											"type": "Double"
										},
										"sink": {
											"name": "montoSeguro",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "versionID",
											"type": "UInt64"
										},
										"sink": {
											"name": "versionId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "vehiculoEstadoID",
											"type": "UInt64"
										},
										"sink": {
											"name": "vehiculoEstadoId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "clienteEstructuraID",
											"type": "UInt64"
										},
										"sink": {
											"name": "clienteEstructuraId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "seguroID",
											"type": "UInt64"
										},
										"sink": {
											"name": "seguroId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "proveedorGpsId",
											"type": "UInt64"
										},
										"sink": {
											"name": "proveedorGpsId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "tieneClaveDuplicado",
											"type": "Boolean"
										},
										"sink": {
											"name": "tieneClaveDuplicado",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "numeroGPS",
											"type": "String"
										},
										"sink": {
											"name": "numeroGPS",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "detalleGPS",
											"type": "String"
										},
										"sink": {
											"name": "detalleGPS",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "gpsMonto",
											"type": "Int32"
										},
										"sink": {
											"name": "gpsMonto",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "ultimaFechaVTV",
											"type": "DateTime"
										},
										"sink": {
											"name": "ultimaFechaVTV",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "fechaClaveDuplicada",
											"type": "DateTime"
										},
										"sink": {
											"name": "fechaClaveDuplicada",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "ultimaCiudadVTVID",
											"type": "UInt64"
										},
										"sink": {
											"name": "ultimaCiudadVTVId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "patenteCuidadID",
											"type": "UInt64"
										},
										"sink": {
											"name": "patenteCuidadId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "gpsIsVisible",
											"type": "Boolean"
										},
										"sink": {
											"name": "gpsIsVisible",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "propietario",
											"type": "String"
										},
										"sink": {
											"name": "propietario",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "propietarioContactoID",
											"type": "UInt64"
										},
										"sink": {
											"name": "propietarioContactoId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "planMantenimientoID",
											"type": "UInt64"
										},
										"sink": {
											"name": "planMantenimientoId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "arrendamientoFechaVencimiento",
											"type": "DateTime"
										},
										"sink": {
											"name": "arrendamientoFechaVencimiento",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "fechaDeRetiro",
											"type": "DateTime"
										},
										"sink": {
											"name": "fechaDeRetiro",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "kmVencimientoVTV",
											"type": "Int32"
										},
										"sink": {
											"name": "kmVencimientoVTV",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "proveedorCombustible",
											"type": "String"
										},
										"sink": {
											"name": "proveedorCombustible",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UltimaTareaID",
											"type": "UInt64"
										},
										"sink": {
											"name": "UltimaTareaId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "fechaInicioSeguro",
											"type": "DateTime"
										},
										"sink": {
											"name": "fechaInicioSeguro",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "codigoHansa",
											"type": "String"
										},
										"sink": {
											"name": "codigoHansa",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "fechaUltimaComparacion",
											"type": "DateTime"
										},
										"sink": {
											"name": "fechaUltimaComparacion",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "vtvCabaTexto",
											"type": "String"
										},
										"sink": {
											"name": "vtvCabaTexto",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "precioInfoauto",
											"type": "Decimal"
										},
										"sink": {
											"name": "precioInfoauto",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "fechaPrecioInfoAuto",
											"type": "DateTime"
										},
										"sink": {
											"name": "fechaPrecioInfoAuto",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "estado",
											"type": "String"
										},
										"sink": {
											"name": "estado",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "motor_number",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "numeroMotor",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": false,
									"treatBooleanAsNumber": true
								}
							}
						},
						"inputs": [
							{
								"referenceName": "EfleetVehiculo",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dimVehiculos",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Inyectar Tipos Orden de Trabajo",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"codigo"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "UInt64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "codigo",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nombre",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "hansa_code",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "hansacode",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "EfleetOrdenTrabajoTipo",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dimOrdenTrabajoTipo",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Inyectar Tareas Orden de trabajo",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "select \n    t.id codigo,\n    t.name nombre,\n    t.description descripcion,\n    t.hansa_code,\n    c.name nombreCategoria,\n    c.description descripcionCategoria\nfrom tasks t\nleft join categories c on c.id = t.category_id\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"codigo"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "codigo",
											"type": "UInt64"
										},
										"sink": {
											"name": "codigo",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "nombre",
											"type": "String"
										},
										"sink": {
											"name": "nombre",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "descripcion",
											"type": "String"
										},
										"sink": {
											"name": "descripcion",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nombreCategoria",
											"type": "String"
										},
										"sink": {
											"name": "nombreCategoria",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "descripcionCategoria",
											"type": "String"
										},
										"sink": {
											"name": "descripcionCategoria",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "EfleetTareas",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dimTareas",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Inyectar Ordenes Trabajo",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "select \r\n   wo.id work_order_id,\r\n   task_id,\r\n   work_order_task_action_id, \r\n   v.id vehiculo_id,\r\n   woty.id work_order_type_id,\r\n   wo.`name` nombreOrdenTrabajo,\r\n   wo.state estadoOrdenTarbajo,\r\n   case \r\n    when woty.id !=2 then wot.total_s_iva_price\r\n    else 0\r\n   end total_s_iva_no_Sinistro,\r\n\r\n   case \r\n    when woty.id !=2 then 1\r\n    else 0\r\n   end EsSeguro,\r\n\r\n   case \r\n    when woty.id = 2 then 1\r\n    else 0\r\n   end EsSinietro,\r\n\r\n   case \r\n    when woty.id =2 then wot.total_s_iva_price\r\n    else 0\r\n   end total_s_iva_Siniestro,\r\n\r\n   wot.workforce_s_iva_price costoManoObraSinIva,\r\n   wot.materials_s_iva_price costoMaterialSinIVa,\r\n   wot.total_s_iva_Price costoTotalSinIva, \r\n   wot.workforce_price costoManoObra,\r\n   wot.materials_price costoMaterial,\r\n   wot.total_Price costoTotal,\r\n   wot.workforce_discount descuentoManoObra,\r\n   wot.materials_price descuentoMaterial,\r\n   wot.total_Price descuentoTotal,\r\n   wo.created_at fechaCreacion,\r\n   wo.updated_at fechaActualizacion\r\nfrom work_orders wo\r\nleft join work_order_tasks wot on wot.work_order_id = wo.id\r\ninner join work_order_types woty on woty.id = wo.work_order_type_id\r\nINNER join vehicles v on v.plate = wo.plate\r\nwhere wo.id is not null",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"ordenTrabajoCodigo"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "work_order_id",
											"type": "UInt64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "ordenTrabajoCodigo",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "task_id",
											"type": "UInt64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "tareaCodigo",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "work_order_task_action_id",
											"type": "UInt64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "tareaAccionCodigo",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "vehiculo_id",
											"type": "UInt64"
										},
										"sink": {
											"name": "vehiculoCodigo",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "work_order_type_id",
											"type": "UInt64"
										},
										"sink": {
											"name": "ordenTabajoTipoCodigo",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "nombreOrdenTrabajo",
											"type": "String"
										},
										"sink": {
											"name": "nombreOrdenTrabajo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "estadoOrdenTarbajo",
											"type": "String"
										},
										"sink": {
											"name": "estadoOrdenTarbajo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "total_s_iva_no_Sinistro",
											"type": "Double"
										},
										"sink": {
											"name": "totalSivaNoSiniestro",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "EsSeguro",
											"type": "Int64"
										},
										"sink": {
											"name": "esSeguro",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EsSinietro",
											"type": "Int64"
										},
										"sink": {
											"name": "esSinietro",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "total_s_iva_Siniestro",
											"type": "Double"
										},
										"sink": {
											"name": "totalSivaSiniestro",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "costoManoObraSinIva",
											"type": "Double"
										},
										"sink": {
											"name": "costoManoObraSinIva",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "costoMaterialSinIVa",
											"type": "Double"
										},
										"sink": {
											"name": "costoMaterialSinIVa",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "costoTotalSinIva",
											"type": "Double"
										},
										"sink": {
											"name": "costoTotalSinIva",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "costoManoObra",
											"type": "Double"
										},
										"sink": {
											"name": "costoManoObra",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "costoMaterial",
											"type": "Double"
										},
										"sink": {
											"name": "costoMaterial",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "costoTotal",
											"type": "Double"
										},
										"sink": {
											"name": "costoTotal",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "descuentoManoObra",
											"type": "Double"
										},
										"sink": {
											"name": "descuentoManoObra",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "descuentoMaterial",
											"type": "Double"
										},
										"sink": {
											"name": "descuentoMaterial",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "descuentoTotal",
											"type": "Double"
										},
										"sink": {
											"name": "descuentoTotal",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "fechaCreacion",
											"type": "DateTime"
										},
										"sink": {
											"name": "fechaCreacion",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "fechaActualizacion",
											"type": "DateTime"
										},
										"sink": {
											"name": "fechaActualizacion",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "EfleetOrdenesTrabajoTareas",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "stgOrdenesTrabajoTareas",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Intectar tabla x",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "select * from tickets",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"codigo"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "EfleetVehiculo",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "stgTickets",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "EFleet"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/stgOrdenesTrabajoTareas')]",
				"[concat(variables('factoryId'), '/datasets/stgTickets')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/003-Inyectar_Dimensiones_Fresh_To_DW')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Inyectar_Origenes_Fresh",
						"description": "",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "select id,\r\nupper(name) name\r\nfrom source_table;\r\n\r\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"codigo"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "codigo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "nombre",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "FreshOrigenes",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dimOrigenes",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Inyectar_Productos_Fresh",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "select id,\nupper(name) name\nfrom product_table;\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"codigo"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "Double",
											"physicalType": "double"
										},
										"sink": {
											"name": "codigo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "nombre",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "FreshProductos",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dimProductos",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Inyectar_Companias_Fresh",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "select id,\nupper(name) name\nfrom freshdesk_companies;\n\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"codigo"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "Double",
											"physicalType": "double"
										},
										"sink": {
											"name": "codigo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "nombre",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "FreshCompanias",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dimCompanias",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Inyectar_Estados_Fresh",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "SELECT id, \nUPPER(TRIM(REPLACE(REPLACE(SUBSTRING_INDEX(name, ',', 1),'[',''),'''',''))) AS  name\nfrom status_table\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"codigo"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "codigo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "nombre",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "FreshEstados",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dimEstados",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Inyectar_Prioridades_Fresh",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "select id,\nupper(name) name\nfrom priority_table;",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"codigo"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "codigo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "nombre",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "FreshPrioridades",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dimPrioridades",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Inyectar_Tipos_Fresh",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "select id,\nupper(name) name\nfrom ticket_type;",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"codigo"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "codigo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "nombre",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "FreshTipos",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dimTiposTickets",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Inyectar_Grupos_Fresh",
						"description": "",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "select id,\nupper(name) name\nfrom group_table;",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"codigo"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "Double",
											"physicalType": "double"
										},
										"sink": {
											"name": "codigo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "nombre",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "FreshGrupos",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dimGrupos",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Inyectar_Agentes_Fresh_Api",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"codigo"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['id']"
										},
										"sink": {
											"name": "codigo",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['contact']['name']"
										},
										"sink": {
											"name": "nombre",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "Api_Agentes",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dimAgentes",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"IdForEach": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "FreshDesk"
				},
				"annotations": [],
				"lastPublishTime": "2025-01-13T18:22:27Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/004-Inyecar_Hechos_Fresh_To_Staiging')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Inyectar_SLA_API",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"codigo"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['id']"
										},
										"sink": {
											"name": "codigo",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['name']"
										},
										"sink": {
											"name": "nombre",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['description']"
										},
										"sink": {
											"name": "descipcion",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['active']"
										},
										"sink": {
											"name": "isactive",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['sla_target']['priority_4']['respond_within']"
										},
										"sink": {
											"name": "slaTargetPriority4RespondWithin",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['sla_target']['priority_4']['resolve_within']"
										},
										"sink": {
											"name": "slaTargerPriority4ResolveWithin",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['sla_target']['priority_3']['respond_within']"
										},
										"sink": {
											"name": "slaTargetPriority3RespondWithin",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['sla_target']['priority_3']['resolve_within']"
										},
										"sink": {
											"name": "slaTargerPriority3ResolveWithin",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['sla_target']['priority_2']['respond_within']"
										},
										"sink": {
											"name": "slaTargetPriority2RespondWithin",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['sla_target']['priority_2']['resolve_within']"
										},
										"sink": {
											"name": "slaTargerPriority2ResolveWithin",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['sla_target']['priority_1']['respond_within']"
										},
										"sink": {
											"name": "slaTargetPriority1RespondWithin",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['sla_target']['priority_1']['resolve_within']"
										},
										"sink": {
											"name": "slaTargerPriority1ResolveWithin",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['escalation']['reminder_resolution']['agent_ids'][0]"
										},
										"sink": {
											"name": "escalationReminderResolutionAgentids",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['escalation']['resolution']['level_1']['agent_ids'][0]"
										},
										"sink": {
											"name": "escalationResolutionLevel1AgentId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['applicable_to']['company_ids'][0]"
										},
										"sink": {
											"name": "companyid",
											"type": "String"
										}
									}
								],
								"collectionReference": ""
							}
						},
						"inputs": [
							{
								"referenceName": "Fresh_SLA",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dimSla",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Ids": {
						"type": "Array",
						"defaultValue": [
							"[['a','b','c']"
						]
					},
					"vId": {
						"type": "String"
					}
				},
				"folder": {
					"name": "FreshDesk"
				},
				"annotations": [],
				"lastPublishTime": "2025-01-14T18:54:25Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/005-Inyectar_Fresh_Conversaciones_To_Dw')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Conversaciones by Ticket",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Ticktes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Ticktes').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Set variable IdParameter",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "IdParameter",
										"value": {
											"value": "@string(item().codigo)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Insertar Conversaciones",
									"type": "AzureFunctionActivity",
									"dependsOn": [
										{
											"activity": "Set variable IdParameter",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"functionName": {
											"value": "@concat('ImportarConversaciones?codigo=',item().codigo)",
											"type": "Expression"
										},
										"headers": {},
										"method": "GET"
									},
									"linkedServiceName": {
										"referenceName": "AF_DW",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Get Ticktes",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT codigo FROM whs.v_getConversaciones",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "stgTickets",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Update FactTickets Fecha Primer Respuesta",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Get Conversaciones by Ticket",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SqlAutocorpDw",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "update whs.factTickets set FechaPrimerRespuesta = r1.fechaRespuesta\r\nfrom\r\n(\r\nSELECT  id codigo, created_at fechaRespuesta\r\nFROM  stg.Conversaciones \r\nwhere created_at is not null\r\n) as r1\r\nwhere whs.factTickets.codigo = r1.codigo"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"IdParameter": {
						"type": "String"
					},
					"Fecha": {
						"type": "String"
					}
				},
				"folder": {
					"name": "FreshDesk"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/stgTickets')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/006-Inyectar_Echos')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Inyectar_Dw_FactTickets",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select distinct\r\nt.codigo,\r\nDATEADD(HOUR,-3, t.fechaAlta)fechaAlta,\r\nDATEADD(HOUR,-3,t.fechaModificacion) fechaModificacion,\r\nc.id companiaId,\r\ne.id estadoId,\r\ntt.id  tipoId,\r\np.id productoId,\r\ng.id grupoId,\r\no.id origenId,\r\npr.id prioridadId,\r\na.id agenteId,\r\nsla.id slaId,\r\ncase \r\n    when pr.codigo = 1 then sla.slaTargerPriority1ResolveWithin /60\r\n    when pr.codigo = 2 then sla.slaTargerPriority2ResolveWithin /60\r\n    when pr.codigo = 3 then sla.slaTargerPriority3ResolveWithin /60\r\n    when pr.codigo = 4 then sla.slaTargerPriority4ResolveWithin /60\r\nend SlaResolucion,\r\ncase \r\n    when pr.codigo = 1 then sla.slaTargetPriority1RespondWithin /60\r\n    when pr.codigo = 2 then sla.slaTargetPriority2RespondWithin /60\r\n    when pr.codigo = 3 then sla.slaTargetPriority3RespondWithin /60\r\n    when pr.codigo = 4 then sla.slaTargetPriority4RespondWithin /60\r\nend SlaRespuesta,\r\ncase \r\n    when wt.FechaPrimerRespuesta is not null then DATEADD(HOUR,-3, wt.FechaPrimerRespuesta)\r\nelse DATEADD(HOUR,-3, presp.FechaPrimerRespuesta)\r\nend FechaPrimerRespuesta,\r\nt.horasDiferecia,\r\nt.minutosDiferencia\r\n\r\nfrom stg.tickets t \r\nleft join whs.dimCompanias c on c.codigo = t.companiaCodigo\r\nleft join whs.dimEstados e on e.codigo = t.estadoCodigo\r\nleft join whs.dimTiposTicket tt on tt.nombre = t.tipoCodigo\r\nleft join whs.dimProductos p on p.codigo = t.productoCodigo\r\nleft join whs.dimGrupos g on g.codigo = t.grupoCodigo\r\nleft join whs.dimOrigenes o on o.codigo = t.origenCodigo\r\nleft join whs.dimPrioridades pr on pr.codigo = t.prioridadCodigo\r\nleft join whs.dimAgentes a on a.codigo = t.agenteCodigo\r\nleft join whs.dimSla sla on ((sla.companyid = t.companiaCodigo) or (sla.nombre like '%Default%')) and sla.isactive = 1\r\nleft join (\r\n                select id codigo,\r\n            min(created_at) FechaPrimerRespuesta\r\n            from stg.Conversaciones \r\n            group by id\r\n            ) presp on presp.codigo = t.codigo\r\nleft join whs.factTickets wt on wt.codigo = t.codigo\r\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"codigo"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "codigo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "codigo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "fechaAlta",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "fechaAlta",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "fechaModificacion",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "fechaModificacion",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "horasDiferecia",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "horasDiferecia",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "minutosDiferencia",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "minutosDiferencia",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "companiaId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "companiaId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "estadoId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "estadoId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "tipoId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "tipoId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "productoId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "productoId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "grupoId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "grupoId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "origenId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "origenId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "prioridadId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "prioridadId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "agenteId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "agenteId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "slaId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "slaId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SlaResolucion",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 7,
											"precision": 21
										},
										"sink": {
											"name": "SlaResolucion",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "SlaRespuesta",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 7,
											"precision": 21
										},
										"sink": {
											"name": "SlaRespuesta",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "FechaPrimerRespuesta",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "FechaPrimerRespuesta",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "stgTickets",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "factTickets",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"nombre": {
						"type": "String"
					},
					"IdParameter": {
						"type": "String"
					}
				},
				"folder": {
					"name": "FreshDesk"
				},
				"annotations": [],
				"lastPublishTime": "2025-01-14T15:43:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/stgTickets')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Inyectar Tabla Estados Vehiculo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Inyectar Tabla Vehiculo Cliente Historial",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "select * from vehicle_client_history;",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "UInt64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "vehicle_id",
											"type": "UInt64"
										},
										"sink": {
											"name": "vehiculoId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "client_id",
											"type": "UInt64"
										},
										"sink": {
											"name": "clienteId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "km",
											"type": "Int32"
										},
										"sink": {
											"name": "km",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "created_at",
											"type": "DateTime",
											"physicalType": "timestamp"
										},
										"sink": {
											"name": "creadoEn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "updated_at",
											"type": "DateTime",
											"physicalType": "timestamp"
										},
										"sink": {
											"name": "actualizadoEn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "EfleetClientes",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "stgHistorialClienteVehiculo",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Inyectar Tabla Estados Vehiculo",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "select * from vehicle_states;\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "UInt64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String"
										},
										"sink": {
											"name": "nombre",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "deleted_at",
											"type": "DateTime",
											"physicalType": "timestamp"
										},
										"sink": {
											"name": "eliminadoEn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "created_at",
											"type": "DateTime",
											"physicalType": "timestamp"
										},
										"sink": {
											"name": "creadoEn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "updated_at",
											"type": "DateTime",
											"physicalType": "timestamp"
										},
										"sink": {
											"name": "actualizadoEn",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "hansa_code",
											"type": "String"
										},
										"sink": {
											"name": "codigoHansa",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "vehicle_states_to",
											"type": "String"
										},
										"sink": {
											"name": "estadosVehiculoA",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "fleet_owner",
											"type": "Boolean"
										},
										"sink": {
											"name": "dueñoFlota",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "hansa_integration",
											"type": "Boolean"
										},
										"sink": {
											"name": "integracionHansa",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": true
								}
							}
						},
						"inputs": [
							{
								"referenceName": "EfleetClientes",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "stgEstadosVehiculos",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Inyectar Tabla Reservas",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "select * from bookings;",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "UInt64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "hansa_code",
											"type": "String"
										},
										"sink": {
											"name": "hansaId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "hansa_client_code",
											"type": "String"
										},
										"sink": {
											"name": "codigoClienteHansa",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "hansa_contact_code",
											"type": "String"
										},
										"sink": {
											"name": "codigoContactoHansa",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "hansa_plate",
											"type": "String"
										},
										"sink": {
											"name": "patenteHansa",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "hansa_booking_status",
											"type": "String"
										},
										"sink": {
											"name": "estadoReservaHansa",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "hansa_booking_type",
											"type": "String"
										},
										"sink": {
											"name": "tipoReservaHansa",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "start_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "inicioReserva",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "end_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "finReserva",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "franchise",
											"type": "Double"
										},
										"sink": {
											"name": "franquisia",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "vehicle_id",
											"type": "UInt64"
										},
										"sink": {
											"name": "VehiculoId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "client_id",
											"type": "UInt64"
										},
										"sink": {
											"name": "clienteId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "subcontact_id",
											"type": "UInt64"
										},
										"sink": {
											"name": "subcontactoId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "deleted_at",
											"type": "DateTime",
											"physicalType": "timestamp"
										},
										"sink": {
											"name": "fechaEliminacion",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "created_at",
											"type": "DateTime",
											"physicalType": "timestamp"
										},
										"sink": {
											"name": "fechaCreacion",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "updated_at",
											"type": "DateTime",
											"physicalType": "timestamp"
										},
										"sink": {
											"name": "fechaActualizacion",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "hansa_related_plate",
											"type": "String"
										},
										"sink": {
											"name": "patenteRelacionadaHansa",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "related_vehicle_id",
											"type": "UInt64"
										},
										"sink": {
											"name": "vehiculoRelacionadoId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "initial_km",
											"type": "Int32"
										},
										"sink": {
											"name": "inicioKm",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "last_km",
											"type": "Int32"
										},
										"sink": {
											"name": "ultimoKm",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "expected_pickup_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "fechaEsperadaRecogida",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "expected_dropoff_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "fechaEntregaEsperada",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "actual_pickup_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "fechaActualRecogida",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "actual_dropoff_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "fechaEntregaActual",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "EfleetClientes",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "stgReservas",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "EFleet"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/stgReservas')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/001-Orquestador')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Inyectar_Data_Fresh",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Iyectar Tickets Api Fresh To Stg",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "003-Inyectar_Dimensiones_Fresh_To_DW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Inyectar_SLA",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Inyectar_Data_Fresh",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "004-Inyecar_Hechos_Fresh_To_Staiging",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Inyectar_FactTickets",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Inyectar_SLA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "006-Inyectar_Echos",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Inyecta_Conversaciones_DW",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Inyectar_FactTickets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "005-Inyectar_Fresh_Conversaciones_To_Dw",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Importar Tickets Excel Consolidado",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureFileStorageReadSettings",
									"recursive": false,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureMySqlSink",
								"writeBatchSize": 10000,
								"writeBatchTimeout": "00:00:30",
								"preCopyScript": "delete from freshdesk_tickets"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "cc_emails",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "cc_emails",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "fwd_emails",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "fwd_emails",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "reply_cc_emails",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "reply_cc_emails",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "ticket_cc_emails",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ticket_cc_emails",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "ticket_bcc_emails",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ticket_bcc_emails",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "fr_escalated",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "fr_escalated",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "spam",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "spam",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "email_config_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "email_config_id",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "group_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "group_id",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "priority",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "priority",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "requester_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "requester_id",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "responder_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "responder_id",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "source",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "source",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "company_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "company_id",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "status",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "subject",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "subject",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "association_type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "association_type",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "support_email",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "support_email",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "to_emails",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "to_emails",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "product_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "product_id",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "id",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "type",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "due_by",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "due_by",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "fr_due_by",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "fr_due_by",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "is_escalated",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "is_escalated",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "created_at",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "created_at",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "updated_at",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "updated_at",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "associated_tickets_count",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "associated_tickets_count",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "tags",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "tags",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "nr_due_by",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "nr_due_by",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "nr_escalated",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "nr_escalated",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "form_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "form_id",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "cf_patente",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "cf_patente",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "cf_id_efleet",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "cf_id_efleet",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "cf_generar_ot_efleet",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "cf_generar_ot_efleet",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "cf_kilometraje",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "cf_kilometraje",
											"type": "String",
											"physicalType": "text"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TicketsCnsolidados_xslx",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "FreshTickets",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Iyectar Tickets Api Fresh To Stg",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "002-Importar_Tickets_Fresh_to_Stg",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Inyectar Efleet Dimensiones",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Iyectar Tickets Api Fresh To Stg",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "001-Inyectar Dimensiones Efleet",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Inyectar Efleet FactEfleet",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Inyectar Efleet Dimensiones",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Inyectar_FactTickets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "002-Inyectar Echos Efleet",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"ProcessID": {
						"type": "String"
					},
					"nombre": {
						"type": "String"
					},
					"vId": {
						"type": "String"
					},
					"IdParameter": {
						"type": "String"
					},
					"Fecha": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-01-14T15:43:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/003-Inyectar_Dimensiones_Fresh_To_DW')]",
				"[concat(variables('factoryId'), '/pipelines/004-Inyecar_Hechos_Fresh_To_Staiging')]",
				"[concat(variables('factoryId'), '/pipelines/006-Inyectar_Echos')]",
				"[concat(variables('factoryId'), '/pipelines/005-Inyectar_Fresh_Conversaciones_To_Dw')]",
				"[concat(variables('factoryId'), '/pipelines/001-Inyectar Dimensiones Efleet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Diario 5am for 4 hours')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "001-Orquestador",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 4,
						"startTime": "2025-01-04T05:08:00",
						"timeZone": "Argentina Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/001-Orquestador')]"
			]
		}
	]
}