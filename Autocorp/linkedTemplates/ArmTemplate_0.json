{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Nombre de instancia de Data Factory",
			"defaultValue": "Autocorp"
		},
		"AF_DW_functionKey": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"functionKey\"de \"AF_DW\""
		},
		"AF_InyectarTickets_functionKey": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"functionKey\"de \"AF_InyectarTickets\""
		},
		"APIFresh_password": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"password\"de \"APIFresh\""
		},
		"ApiAgente_password": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"password\"de \"ApiAgente\""
		},
		"ApiConversariones_password": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"password\"de \"ApiConversariones\""
		},
		"EfleetDB_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"EfleetDB\""
		},
		"FreshDB_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"FreshDB\""
		},
		"Logs Fabric_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"Logs Fabric\""
		},
		"SqlAutocorpDw_password": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"password\"de \"SqlAutocorpDw\""
		},
		"Storege_Fresh_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"Storege_Fresh\""
		},
		"AF_DW_properties_typeProperties_functionAppUrl": {
			"type": "string",
			"defaultValue": "https://dwservices.azurewebsites.net"
		},
		"AF_InyectarTickets_properties_typeProperties_functionAppUrl": {
			"type": "string",
			"defaultValue": "https://inyectartickets.azurewebsites.net"
		},
		"APIFresh_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://autocorpar.freshdesk.com/api/v2/sla_policies"
		},
		"APIFresh_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "yBjVC7W3wuMLeucdH4Hw"
		},
		"ApiAgente_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://autocorpar.freshdesk.com/api/v2/agents/"
		},
		"ApiAgente_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "yBjVC7W3wuMLeucdH4Hw"
		},
		"ApiConversariones_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://autocorpar.freshdesk.com/api/v2/tickets/93311/conversations"
		},
		"ApiConversariones_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "yBjVC7W3wuMLeucdH4Hw"
		},
		"ApiTickets_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://autocorpdwapi.azurewebsites.net/api/freshwork/tickets"
		},
		"SqlAutocorpDw_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "autocorpdw.database.windows.net"
		},
		"SqlAutocorpDw_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "Autocorp_dw"
		},
		"SqlAutocorpDw_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "autocorp"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AF_DW')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "[parameters('AF_DW_properties_typeProperties_functionAppUrl')]",
					"authentication": "Anonymous",
					"functionKey": {
						"type": "SecureString",
						"value": "[parameters('AF_DW_functionKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AF_InyectarTickets')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "[parameters('AF_InyectarTickets_properties_typeProperties_functionAppUrl')]",
					"authentication": "Anonymous",
					"functionKey": {
						"type": "SecureString",
						"value": "[parameters('AF_InyectarTickets_functionKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/APIFresh')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('APIFresh_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('APIFresh_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('APIFresh_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ApiAgente')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('ApiAgente_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('ApiAgente_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ApiAgente_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ApiConversariones')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('ApiConversariones_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('ApiConversariones_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ApiConversariones_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ApiTickets')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('ApiTickets_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EfleetDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureMySql",
				"typeProperties": {
					"connectionString": "[parameters('EfleetDB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FreshDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureMySql",
				"typeProperties": {
					"connectionString": "[parameters('FreshDB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Logs Fabric')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('Logs Fabric_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlAutocorpDw')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('SqlAutocorpDw_properties_typeProperties_server')]",
					"database": "[parameters('SqlAutocorpDw_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('SqlAutocorpDw_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SqlAutocorpDw_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Storege_Fresh')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFileStorage",
				"typeProperties": {
					"connectionString": "[parameters('Storege_Fresh_connectionString')]",
					"fileShare": "freshdesk-fileshare"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/002-Importar_Tickets_Fresh_to_Stg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Listar fecha",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SqlAutocorpDw",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "----------------------------------------------------------------------------------------------------------\r\n-- Genera el calendario de importacion de tickets, correspondientes a los dias previos a la fecha actual\r\n-- para seletar la cantidad de días modificar el parametro @dias\r\n----------------------------------------------------------------------------------------------------------\r\nDECLARE @FechaInicio DATE, @Dias int = 30;\r\nSET @FechaInicio = (CONVERT(DATE, DATEADD(DAY, @Dias*-1, getdate())));\r\n\r\n;WITH Fechas AS (\r\n    SELECT @FechaInicio AS Fecha\r\n    UNION ALL\r\n    SELECT DATEADD(DAY, 1, Fecha)\r\n    FROM Fechas\r\n    WHERE Fecha < CAST(GETDATE() AS DATE)\r\n)\r\nSELECT *\r\nFROM Fechas\r\norder by 1\r\nOPTION (MAXRECURSION 0);"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "ImportTicketsPorFecha",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Listar fecha",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Listar fecha').output.resultSets[0].rows",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Importar Tickets",
									"type": "AzureFunctionActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"functionName": {
											"value": "@concat('ImportarTickets?fechaDesde=',item().Fecha)",
											"type": "Expression"
										},
										"body": {},
										"headers": {},
										"method": "POST"
									},
									"linkedServiceName": {
										"referenceName": "AF_DW",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Importar Activity",
						"type": "AzureFunctionActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": {
								"value": "@concat('ImportarActivities')",
								"type": "Expression"
							},
							"body": {},
							"headers": {},
							"method": "POST"
						},
						"linkedServiceName": {
							"referenceName": "AF_DW",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"pages": {
						"type": "Integer",
						"defaultValue": 1
					},
					"index": {
						"type": "String",
						"defaultValue": "0"
					},
					"Item": {
						"type": "String"
					},
					"Fecha": {
						"type": "String"
					}
				},
				"folder": {
					"name": "FreshDesk"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlAutocorpDw')]",
				"[concat(variables('factoryId'), '/linkedServices/AF_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/002-Inyectar Echos Efleet')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Inyectar Fact",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SqlAutocorpDw",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "\ntruncate table whs.factOrdenesTrabajo\ninsert into whs.factOrdenesTrabajo\nselect \n    ot.ordenTrabajoCodigo codigo,\n    t.id tareaid,\n    null tareaAccionId,\n    v.id vehiculoid,\n    ordenTabajoTipoCodigo ordenTrabajoTipoid,\n    nombreOrdenTrabajo,\n    estadoOrdenTarbajo,\n    totalSivaNoSiniestro,        \n    esSeguro,\n    esSinietro,    \n    totalSivaSiniestro,    \n    costoManoObraSinIva,\n    costoMaterialSinIVa,\n    costoTotalSinIva,\n    costoManoObra,    \n    costoMaterial,\n    costoTotal,\n    descuentoManoObra,\n    descuentoMaterial,    \n    descuentoTotal,\n    fechaCreacion,\n    fechaActualizacion\n\nfrom stg.OrdenesTrabajoTareas ot\nleft join whs.dimVehiculos v on v.codigo = ot.vehiculoCodigo\nleft join whs.dimOrdenTrabajoTipo ott on ott.codigo = ot.ordenTabajoTipoCodigo\nleft join whs.dimTareas t on t.id = ot.tareaCodigo\nwhere ordenTrabajoCodigo is not null"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "EFleet"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlAutocorpDw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Api_Agentes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ApiAgente",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "APIs"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ApiAgente')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EfleetClientes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EfleetDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/Efleet"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "contact_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "description",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "deleted_at",
						"type": "timestamp",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "created_at",
						"type": "timestamp",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "updated_at",
						"type": "timestamp",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "web",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "business_name",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "fantasy_name",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "group",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "classification",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "first_credit_limit",
						"type": "double",
						"precision": 0,
						"scale": 2
					},
					{
						"name": "second_credit_limit",
						"type": "double",
						"precision": 0,
						"scale": 2
					},
					{
						"name": "operation_type_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "invoice_type_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "client_state_type_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "client_trade_type_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "client_origin_type_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "payment_deadline",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "client_iibb_type_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "aldnet_account_number",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "aldnet_account_code",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "aldnet_account_test_code",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "client_type_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "synched",
						"type": "tinyint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "vendor_user_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "operator_user_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "client_group_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "send_campaign",
						"type": "tinyint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "campaign_subcontact_type_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "is_risk_client",
						"type": "tinyint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "send_survey",
						"type": "tinyint",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "clients"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EfleetDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EfleetContratos')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EfleetDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/Efleet"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "name",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "contract_type_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "contract_origin_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "hansa_ID",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "hansa_service_num",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "hansa_cu_num",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "hansa_created",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "hansa_created_user",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "hansa_start_date",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "hansa_end_date",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "client_approval_username",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "client_approval_date",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "client_estimated_fleet",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "client_first_limit",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "client_second_limit",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "autocorp_approval_username",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "autocorp_approval_date",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "autocorp_commercial_username",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "autocorp_implementation_username",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "autocorp_post_sale_username",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "comments",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "deleted_at",
						"type": "timestamp",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "created_at",
						"type": "timestamp",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "updated_at",
						"type": "timestamp",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "contact_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "synched",
						"type": "tinyint",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "contracts"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EfleetDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EfleetOrdenTrabajoCategoria')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EfleetDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/Efleet"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "section_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "name",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "description",
						"type": "mediumtext",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "deleted_at",
						"type": "timestamp",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "created_at",
						"type": "timestamp",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "updated_at",
						"type": "timestamp",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "categories"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EfleetDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EfleetOrdenTrabajoOrigen')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EfleetDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/Efleet"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "name",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "hansa_code",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "deleted_at",
						"type": "timestamp",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "created_at",
						"type": "timestamp",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "updated_at",
						"type": "timestamp",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "work_order_origins"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EfleetDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EfleetOrdenTrabajoTipo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EfleetDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/Efleet"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "name",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "hansa_code",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "deleted_at",
						"type": "timestamp",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "created_at",
						"type": "timestamp",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "updated_at",
						"type": "timestamp",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "workflow_code",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "card_color",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "font_color",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "accept_multiple",
						"type": "tinyint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "os_type_hansa_code",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "allow_tasks_added",
						"type": "tinyint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "default_work_order_origin_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "default_work_order_task_action_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "initial_detail",
						"type": "tinyint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "materials_price_enable",
						"type": "tinyint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "work_force_price_enable",
						"type": "tinyint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "default_provider_type_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "default_reason",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "budget_attachment_required",
						"type": "tinyint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "default_voucher_type_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "payment_deadline_change",
						"type": "tinyint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "total_price_enable",
						"type": "tinyint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "freshdesk_type",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "mobile_name",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "send_survey",
						"type": "tinyint",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "work_order_types"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EfleetDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EfleetOrdenTrabajoTipoGasto')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EfleetDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/Efleet"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "name",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "hansa_code",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "deleted_at",
						"type": "timestamp",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "created_at",
						"type": "timestamp",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "updated_at",
						"type": "timestamp",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "work_order_expense_types"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EfleetDB')]"
			]
		}
	]
}