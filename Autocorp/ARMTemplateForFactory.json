{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Nombre de instancia de Data Factory",
			"defaultValue": "Autocorp"
		},
		"APIFresh_password": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"password\"de \"APIFresh\""
		},
		"DataWareouse_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"DataWareouse\""
		},
		"FreshDB_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"FreshDB\""
		},
		"StaigingDB_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"StaigingDB\""
		},
		"APIFresh_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://autocorpar.freshdesk.com/api/v2/sla_policies"
		},
		"APIFresh_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "yBjVC7W3wuMLeucdH4Hw"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/001-Orquestador')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Inyectar_Data_Fresh",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "002-Inyectar_Data_Fresh",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Inyectar_Dimensiones_DW",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Inyectar_Data_Fresh",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "004-Inyectar_Dimensions",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Inyectar_FactTickets",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Inyectar_Dimensiones_DW",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "005-Inyectar_Echos",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"ProcessID": {
						"type": "String"
					},
					"nombre": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-01-14T15:43:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/002-Inyectar_Data_Fresh')]",
				"[concat(variables('factoryId'), '/pipelines/004-Inyectar_Dimensions')]",
				"[concat(variables('factoryId'), '/pipelines/005-Inyectar_Echos')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/002-Inyectar_Data_Fresh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Inyectar_Agentes_Fresh",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "agent_table"
							},
							{
								"name": "Destination",
								"value": "agentes"
							}
						],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource"
							},
							"sink": {
								"type": "AzureMySqlSink",
								"writeBatchSize": 10000,
								"writeBatchTimeout": "00:00:30",
								"preCopyScript": "Truncate Table agentes"
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "Double",
											"physicalType": "double"
										},
										"sink": {
											"name": "codigo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "nombre",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "FreshAgentes",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "StgAgentes",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Inyectar_Origenes_Fresh",
						"description": "",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureMySqlSink",
								"writeBatchSize": 10000,
								"writeBatchTimeout": "00:00:30",
								"preCopyScript": "Truncate Table Origenes"
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "codigo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "nombre",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "FreshOrigenes",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "StgOrigenes",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Inyectar_Productos_Fresh",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureMySqlSink",
								"writeBatchSize": 10000,
								"writeBatchTimeout": "00:00:30",
								"preCopyScript": "Truncate Table Productos"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "Double",
											"physicalType": "double"
										},
										"sink": {
											"name": "codigo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "nombre",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "FreshProductos",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "StgProductos",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Inyectar_Companias_Fresh",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureMySqlSink",
								"writeBatchSize": 10000,
								"writeBatchTimeout": "00:00:30",
								"preCopyScript": "Truncate Table Companias"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "Double",
											"physicalType": "double"
										},
										"sink": {
											"name": "codigo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "nombre",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "FreshCompanias",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "StgCompanias",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Inyectar_Estados_Fresh",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "SELECT id, \nTRIM(REPLACE(REPLACE(SUBSTRING_INDEX(name, ',', 1),'[',''),'''','')) AS  name\nfrom status_table\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureMySqlSink",
								"writeBatchSize": 10000,
								"writeBatchTimeout": "00:00:30",
								"preCopyScript": "Truncate Table Estados"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "codigo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "nombre",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "FreshEstados",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "StgEstados",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Inyectar_Prioridades_Fresh",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureMySqlSink",
								"writeBatchSize": 10000,
								"writeBatchTimeout": "00:00:30",
								"preCopyScript": "Truncate Table Prioridad"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "int",
											"scale": 0,
											"precision": 0
										},
										"sink": {
											"name": "codigo",
											"type": "varchar",
											"scale": 0,
											"precision": 0
										}
									},
									{
										"source": {
											"name": "name",
											"type": "text",
											"scale": 0,
											"precision": 0
										},
										"sink": {
											"name": "nombre",
											"type": "varchar",
											"scale": 0,
											"precision": 0
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "FreshPrioridades",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "StgPrioridad",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Inyectar_Tipos_Fresh",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureMySqlSink",
								"writeBatchSize": 10000,
								"writeBatchTimeout": "00:00:30",
								"preCopyScript": "Truncate Table TipoTicket"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "codigo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "nombre",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "FreshTipos",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "StgTipos",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Inyectar_Tickets_Fresh",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "select\nt.id,\ncreated_at,\nupdated_at,\ntimestampdiff(HOUR,created_at,updated_at) AS `hours_between`,\ntimestampdiff(MINUTE,created_at,updated_at) AS `minutes_between`,\ncompany_id as companiaCodigo,\n`status` as estadoCodigo, \n`type` as tipoCodigo, \ntt.id as tipoid,\nproduct_id as productoCodigo, \ngroup_id as grupoCodigo, \n`source` as origenCodigo,\n`priority` as prioridadCodigo,\n`responder_id` as agenteCodigo\nfrom freshdesk_tickets t\nleft join ticket_type tt on tt.name = t.type",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureMySqlSink",
								"writeBatchSize": 10000,
								"writeBatchTimeout": "00:00:30",
								"preCopyScript": "Truncate Table Tickets"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "codigo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "created_at",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "fechaAlta",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "updated_at",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "fechaModificacion",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "hours_between",
											"type": "Int64"
										},
										"sink": {
											"name": "horasDiferecia",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "minutes_between",
											"type": "Int64"
										},
										"sink": {
											"name": "minutosDiferencia",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "companiaCodigo",
											"type": "Double"
										},
										"sink": {
											"name": "companiaCodigo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "estadoCodigo",
											"type": "Int32"
										},
										"sink": {
											"name": "estadoCodigo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "tipoCodigo",
											"type": "String"
										},
										"sink": {
											"name": "tipoCodigo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "productoCodigo",
											"type": "String"
										},
										"sink": {
											"name": "productoCodigo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "grupoCodigo",
											"type": "Double"
										},
										"sink": {
											"name": "grupoCodigo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "origenCodigo",
											"type": "Int32"
										},
										"sink": {
											"name": "origenCodigo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "prioridadCodigo",
											"type": "Int32"
										},
										"sink": {
											"name": "prioridadCodigo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "agenteCodigo",
											"type": "Double"
										},
										"sink": {
											"name": "agenteCodigo",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "FreshTickets",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "StgTickets",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Inyectar_Grupos_Fresh",
						"description": "",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureMySqlSink",
								"writeBatchSize": 10000,
								"writeBatchTimeout": "00:00:30",
								"preCopyScript": "Truncate Table Origenes"
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "codigo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "nombre",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "FreshGrupos",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "StgGrupos",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-01-13T18:22:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/FreshAgentes')]",
				"[concat(variables('factoryId'), '/datasets/StgAgentes')]",
				"[concat(variables('factoryId'), '/datasets/FreshOrigenes')]",
				"[concat(variables('factoryId'), '/datasets/StgOrigenes')]",
				"[concat(variables('factoryId'), '/datasets/FreshProductos')]",
				"[concat(variables('factoryId'), '/datasets/StgProductos')]",
				"[concat(variables('factoryId'), '/datasets/FreshCompanias')]",
				"[concat(variables('factoryId'), '/datasets/StgCompanias')]",
				"[concat(variables('factoryId'), '/datasets/FreshEstados')]",
				"[concat(variables('factoryId'), '/datasets/StgEstados')]",
				"[concat(variables('factoryId'), '/datasets/FreshPrioridades')]",
				"[concat(variables('factoryId'), '/datasets/StgPrioridad')]",
				"[concat(variables('factoryId'), '/datasets/FreshTipos')]",
				"[concat(variables('factoryId'), '/datasets/StgTipos')]",
				"[concat(variables('factoryId'), '/datasets/FreshTickets')]",
				"[concat(variables('factoryId'), '/datasets/StgTickets')]",
				"[concat(variables('factoryId'), '/datasets/FreshGrupos')]",
				"[concat(variables('factoryId'), '/datasets/StgGrupos')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/003-Inyecar_SLA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Inyectar_SLA_API",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureMySqlSink",
								"writeBatchSize": 10000,
								"writeBatchTimeout": "00:00:30",
								"preCopyScript": "truncate table Sla"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['id']"
										},
										"sink": {
											"name": "codigo"
										}
									},
									{
										"source": {
											"path": "$['name']"
										},
										"sink": {
											"name": "nombre"
										}
									},
									{
										"source": {
											"path": "$['description']"
										},
										"sink": {
											"name": "descipcion"
										}
									},
									{
										"source": {
											"path": "$['active']"
										},
										"sink": {
											"name": "isactive"
										}
									},
									{
										"source": {
											"path": "$['sla_target']['priority_4']['respond_within']"
										},
										"sink": {
											"name": "slaTargetPriority4RespondWithin"
										}
									},
									{
										"source": {
											"path": "$['sla_target']['priority_4']['resolve_within']"
										},
										"sink": {
											"name": "slaTargerPriority4ResolveWithin"
										}
									},
									{
										"source": {
											"path": "$['sla_target']['priority_3']['respond_within']"
										},
										"sink": {
											"name": "slaTargetPriority3RespondWithin"
										}
									},
									{
										"source": {
											"path": "$['sla_target']['priority_3']['resolve_within']"
										},
										"sink": {
											"name": "slaTargerPriority3ResolveWithin"
										}
									},
									{
										"source": {
											"path": "$['sla_target']['priority_2']['respond_within']"
										},
										"sink": {
											"name": "slaTargetPriority2RespondWithin"
										}
									},
									{
										"source": {
											"path": "$['sla_target']['priority_2']['resolve_within']"
										},
										"sink": {
											"name": "slaTargerPriority2ResolveWithin"
										}
									},
									{
										"source": {
											"path": "$['sla_target']['priority_1']['respond_within']"
										},
										"sink": {
											"name": "slaTargetPriority1RespondWithin"
										}
									},
									{
										"source": {
											"path": "$['sla_target']['priority_1']['resolve_within']"
										},
										"sink": {
											"name": "slaTargerPriority1ResolveWithin"
										}
									},
									{
										"source": {
											"path": "$['applicable_to']['company_ids'][0]"
										},
										"sink": {
											"name": "companyid"
										}
									},
									{
										"source": {
											"path": "$['is_default']"
										},
										"sink": {
											"name": "isdefault"
										}
									},
									{
										"source": {
											"path": "$['position']"
										},
										"sink": {
											"name": "posicion"
										}
									},
									{
										"source": {
											"path": "$['created_at']"
										},
										"sink": {
											"name": "fechaAlta"
										}
									},
									{
										"source": {
											"path": "$['updated_at']"
										},
										"sink": {
											"name": "fechaModificacion"
										}
									},
									{
										"source": {
											"path": "$['escalation']['reminder_resolution']['agent_ids'][0]"
										},
										"sink": {
											"name": "escalationReminderResolutionAgentids"
										}
									},
									{
										"source": {
											"path": "$['escalation']['resolution']['level_1']['agent_ids'][0]"
										},
										"sink": {
											"name": "escalationResolutionLevel1AgentId"
										}
									}
								],
								"collectionReference": "$['.company_ids']"
							}
						},
						"inputs": [
							{
								"referenceName": "Fresh_SLA",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "StgSLA",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-01-14T18:54:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Fresh_SLA')]",
				"[concat(variables('factoryId'), '/datasets/StgSLA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/004-Inyectar_Dimensions')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Inyectar_Dw_Agentes",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Inyectar Agentes",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StgAgentes": {},
									"DimAgentes": {},
									"InyectarDW": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Inyectar_Dw_Companias",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Inyectar Companias",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StgCompanias": {},
									"DwCompanias": {},
									"InyectarDW": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Inyectar_Dw_Estados",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Inyectar Estados",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StgEstados": {},
									"DwEstados": {},
									"InyectarDW": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Inyectar_Dw_Grupos",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Inyectar Grupos",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StgGrupos": {},
									"DwGrupos": {},
									"InyectarDW": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Inyectar_Dw_Origenes",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Inyectar Origenes",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StgOrigenes": {},
									"DwOrigenes": {},
									"InyectarDW": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Inyectar_Dw_Prioridades",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Inyectar Prioridades",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StgPrioridades": {},
									"DwPrioridades": {},
									"InyectarDW": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Inyectar_Dw_Productos",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Inyectar Productos",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StgProductos": {},
									"DwProductos": {},
									"InyectarDW": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Inyectar_Dw_Tipos",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Inyectar Tipos",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StgTipos": {},
									"DwTipos": {},
									"InyectarDW": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Inyectar_Dw_SLA",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Inyectar SLA",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StgSla": {},
									"Insert": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"nombre": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-01-14T15:43:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Inyectar Agentes')]",
				"[concat(variables('factoryId'), '/dataflows/Inyectar Companias')]",
				"[concat(variables('factoryId'), '/dataflows/Inyectar Estados')]",
				"[concat(variables('factoryId'), '/dataflows/Inyectar Grupos')]",
				"[concat(variables('factoryId'), '/dataflows/Inyectar Origenes')]",
				"[concat(variables('factoryId'), '/dataflows/Inyectar Prioridades')]",
				"[concat(variables('factoryId'), '/dataflows/Inyectar Productos')]",
				"[concat(variables('factoryId'), '/dataflows/Inyectar Tipos')]",
				"[concat(variables('factoryId'), '/dataflows/Inyectar SLA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/005-Inyectar_Echos')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Inyectar_Dw_FactTickets",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "select \nt.codigo,\nt.fechaAlta,\nt.fechaModificacion,\nt.horasDiferecia,\nt.minutosDiferencia,\nc.id companiasid,\ne.id estadoid,\ntp.id Tipoid,\np.id productoid,\ng.id grupoid,\no.id origenid,\npri.id prioridadid,\na.id agenteid\nfrom tickets t\nLEFT JOIN Autocorp_DW.dimCompanias c on c.codigo = t.companiaCodigo\nLEFT JOIN Autocorp_DW.dimEstados e on e.codigo = t.estadoCodigo\nLEFT JOIN Autocorp_DW.dimTiposTicket tp on tp.nombre = t.tipoCodigo\nLEFT JOIN Autocorp_DW.dimProductos p on p.codigo = REPLACE(t.productoCodigo,'.0','')\nLEFT JOIN Autocorp_DW.dimGrupos g on g.codigo = REPLACE(t.grupoCodigo,'.0','')\nLEFT JOIN Autocorp_DW.dimOrigenes o on o.codigo = t.origenCodigo\nLEFT JOIN Autocorp_DW.dimPrioridades pri on pri.codigo = t.prioridadCodigo\nLEFT JOIN Autocorp_DW.dimAgentes a on a.codigo = t.agenteCodigo\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureMySqlSink",
								"writeBatchSize": 10000,
								"writeBatchTimeout": "00:00:30",
								"preCopyScript": "Truncate Table Autocorp_DW.factTickets"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "codigo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "codigo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "fechaAlta",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "fechaAlta",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "fechaModificacion",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "fechaModificacion",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "horasDiferecia",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "horasDiferecia",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "minutosDiferencia",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "minutosDiferencia",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "companiasid",
											"type": "Int32"
										},
										"sink": {
											"name": "companiaId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "estadoid",
											"type": "Int32"
										},
										"sink": {
											"name": "estadoId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Tipoid",
											"type": "Int32"
										},
										"sink": {
											"name": "tipoId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "productoid",
											"type": "Int32"
										},
										"sink": {
											"name": "productoId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "grupoid",
											"type": "Int32"
										},
										"sink": {
											"name": "grupoId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "origenid",
											"type": "Int32"
										},
										"sink": {
											"name": "origenId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "prioridadid",
											"type": "Int32"
										},
										"sink": {
											"name": "prioridadId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "agenteid",
											"type": "Int32"
										},
										"sink": {
											"name": "agenteId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "StgTickets",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DwFactTickets",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"nombre": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-01-14T15:43:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/StgTickets')]",
				"[concat(variables('factoryId'), '/datasets/DwFactTickets')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DwDimAgentes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataWareouse",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DW/Dimensiones"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "codigo",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "nombre",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "dimagentes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataWareouse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DwDimCompanias')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataWareouse",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DW/Dimensiones"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "codigo",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "nombre",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "dimcompanias"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataWareouse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DwDimEstados')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataWareouse",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DW/Dimensiones"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "codigo",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "nombre",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "dimestados"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataWareouse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DwDimGrupos')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataWareouse",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DW/Dimensiones"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "codigo",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "nombre",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "dimgrupos"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataWareouse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DwDimOrigenes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataWareouse",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DW/Dimensiones"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "codigo",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "nombre",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "dimorigenes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataWareouse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DwDimPrioridades')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataWareouse",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DW/Dimensiones"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "codigo",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "nombre",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "dimprioridades"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataWareouse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DwDimProductos')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataWareouse",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DW/Dimensiones"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "codigo",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "nombre",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "dimproductos"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataWareouse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DwDimSla')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataWareouse",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DW/Dimensiones"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "codigo",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "nombre",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "descipcion",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "activo",
						"type": "tinyint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "prederterminado",
						"type": "tinyint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "posicion",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "fechaAlta",
						"type": "timestamp",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "fechaModificacion",
						"type": "timestamp",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "companiaid",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "TiempoRespuestaPrioridad1",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "TiempoResolucionPrioridad1",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "TiempoRespuestaPrioridad2",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "TiempoResolucionPrioridad2",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "TiempoRespuestaPrioridad3",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "TiempoResolucionPrioridad3",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "TiempoRespuestaPrioridad4",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "TiempoResolucionPrioridad4",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					}
				],
				"typeProperties": {
					"tableName": "dimsla"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataWareouse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DwDimTiposTicket')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataWareouse",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DW/Dimensiones"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "codigo",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "nombre",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "dimtiposticket"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataWareouse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DwFactTickets')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataWareouse",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DW/Echos"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "codigo",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "fechaAlta",
						"type": "datetime",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "fechaModificacion",
						"type": "datetime",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "horasDiferecia",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "minutosDiferencia",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "companiaId",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "estadoId",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "tipoId",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "productoId",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "grupoId",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "origenId",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "prioridadId",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "agenteId",
						"type": "int",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "facttickets"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataWareouse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FreshAgentes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FreshDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/Fresh"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "name",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "id",
						"type": "double",
						"precision": 0,
						"scale": 31
					}
				],
				"typeProperties": {
					"tableName": "agent_table"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FreshDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FreshCompanias')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FreshDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/Fresh"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id",
						"type": "double",
						"precision": 0,
						"scale": 31
					},
					{
						"name": "name",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "description",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "note",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "domains",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "created_at",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "updated_at",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "health_score",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "account_tier",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "renewal_date",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "industry",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "custom_fields.estado_crediticio",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "custom_fields.cuit",
						"type": "double",
						"precision": 0,
						"scale": 31
					}
				],
				"typeProperties": {
					"tableName": "freshdesk_companies"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FreshDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FreshEstados')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FreshDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/Fresh"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "name",
						"type": "text",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "status_table"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FreshDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FreshGrupos')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FreshDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/Fresh"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "name",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "id",
						"type": "double",
						"precision": 0,
						"scale": 31
					}
				],
				"typeProperties": {
					"tableName": "group_table"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FreshDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FreshOrigenes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FreshDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/Fresh"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "name",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "id",
						"type": "int",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "source_table"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FreshDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FreshPrioridades')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FreshDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/Fresh"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "name",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "id",
						"type": "int",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "priority_table"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FreshDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FreshProductos')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FreshDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/Fresh"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "name",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "id",
						"type": "double",
						"precision": 0,
						"scale": 31
					}
				],
				"typeProperties": {
					"tableName": "product_table"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FreshDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FreshTickets')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FreshDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/Fresh"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "cc_emails",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "fwd_emails",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "reply_cc_emails",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ticket_cc_emails",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ticket_bcc_emails",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "fr_escalated",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "spam",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "email_config_id",
						"type": "double",
						"precision": 0,
						"scale": 31
					},
					{
						"name": "group_id",
						"type": "double",
						"precision": 0,
						"scale": 31
					},
					{
						"name": "priority",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "requester_id",
						"type": "double",
						"precision": 0,
						"scale": 31
					},
					{
						"name": "responder_id",
						"type": "double",
						"precision": 0,
						"scale": 31
					},
					{
						"name": "source",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "company_id",
						"type": "double",
						"precision": 0,
						"scale": 31
					},
					{
						"name": "status",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "subject",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "association_type",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "support_email",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "to_emails",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "product_id",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "id",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "type",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "due_by",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "fr_due_by",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "is_escalated",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "custom_fields",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "created_at",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "updated_at",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "associated_tickets_count",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "tags",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "nr_due_by",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "nr_escalated",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "form_id",
						"type": "double",
						"precision": 0,
						"scale": 31
					},
					{
						"name": "cf_patente",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "cf_id_efleet",
						"type": "double",
						"precision": 0,
						"scale": 31
					},
					{
						"name": "cf_generar_ot_efleet",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "cf_kilometraje",
						"type": "double",
						"precision": 0,
						"scale": 31
					},
					{
						"name": "cf_obs_efleet",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "cf_motivo_de_reclamo",
						"type": "text",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "freshdesk_tickets"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FreshDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FreshTipos')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FreshDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/Fresh"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "name",
						"type": "text",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "ticket_type"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FreshDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Fresh_SLA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "APIFresh",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "APIs"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/APIFresh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/StgAgentes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "StaigingDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staiging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "codigo",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "nombre",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "agentes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/StaigingDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/StgCompanias')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "StaigingDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staiging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "codigo",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "nombre",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "companias"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/StaigingDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/StgEstados')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "StaigingDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staiging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "codigo",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "nombre",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "estados"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/StaigingDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/StgGrupos')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "StaigingDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staiging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "codigo",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "nombre",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "grupo"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/StaigingDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/StgOrigenes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "StaigingDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staiging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "codigo",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "nombre",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "origenes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/StaigingDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/StgPrioridad')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "StaigingDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staiging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "codigo",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "nombre",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "prioridad"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/StaigingDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/StgProductos')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "StaigingDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staiging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "codigo",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "nombre",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "productos"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/StaigingDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/StgSLA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "StaigingDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staiging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "codigo",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "nombre",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "descipcion",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "isactive",
						"type": "tinyint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "isdefault",
						"type": "tinyint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "posicion",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "fechaAlta",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "fechaModificacion",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "companyid",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "slaTargetPriority1RespondWithin",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "slaTargerPriority1ResolveWithin",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "slaTargetPriority2RespondWithin",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "slaTargerPriority2ResolveWithin",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "slaTargetPriority3RespondWithin",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "slaTargerPriority3ResolveWithin",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "slaTargetPriority4RespondWithin",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "slaTargerPriority4ResolveWithin",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "escalationReminderResolutionEscalationTime",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "escalationReminderResolutionAgentids",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "escalationResolutionLevel1EscalationTime",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "escalationResolutionLevel1AgentId",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "sla"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/StaigingDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/StgTickets')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "StaigingDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staiging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "codigo",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "fechaAlta",
						"type": "datetime",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "fechaModificacion",
						"type": "datetime",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "horasDiferecia",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "minutosDiferencia",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "companiaCodigo",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "estadoCodigo",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "tipoCodigo",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "productoCodigo",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "grupoCodigo",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "origenCodigo",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "prioridadCodigo",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "agenteCodigo",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "tickets"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/StaigingDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/StgTipos')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "StaigingDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staiging"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "codigo",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "nombre",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "tipoticket"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/StaigingDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/APIFresh')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('APIFresh_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('APIFresh_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('APIFresh_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataWareouse')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureMySql",
				"typeProperties": {
					"connectionString": "[parameters('DataWareouse_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FreshDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureMySql",
				"typeProperties": {
					"connectionString": "[parameters('FreshDB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/StaigingDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureMySql",
				"typeProperties": {
					"connectionString": "[parameters('StaigingDB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Diario 2-00am')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "001-Orquestador",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 24,
						"startTime": "2025-01-04T02:08:00",
						"timeZone": "Argentina Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/001-Orquestador')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Inyectar Agentes')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Inyectar Dimensiones"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "StgAgentes",
								"type": "DatasetReference"
							},
							"name": "StgAgentes"
						},
						{
							"dataset": {
								"referenceName": "DwDimAgentes",
								"type": "DatasetReference"
							},
							"name": "DimAgentes"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "DataWareouse",
								"type": "LinkedServiceReference"
							},
							"name": "InyectarDW"
						}
					],
					"transformations": [
						{
							"name": "Validar"
						}
					],
					"scriptLines": [
						"source(output(",
						"          codigo as string,",
						"          nombre as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> StgAgentes",
						"source(output(",
						"          id as integer,",
						"          codigo as string,",
						"          nombre as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DimAgentes",
						"StgAgentes, DimAgentes exists(StgAgentes@codigo == DimAgentes@codigo",
						"     && StgAgentes@nombre == DimAgentes@nombre,",
						"     negate:true,",
						"     broadcast: 'auto')~> Validar",
						"Validar sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     tableName: 'dimagentes',",
						"     deletable: false,",
						"     insertable: true,",
						"     updateable: false,",
						"     upsertable: false,",
						"     store: 'mysql',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> InyectarDW"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/StgAgentes')]",
				"[concat(variables('factoryId'), '/datasets/DwDimAgentes')]",
				"[concat(variables('factoryId'), '/linkedServices/DataWareouse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Inyectar Companias')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Inyectar Dimensiones"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "StgCompanias",
								"type": "DatasetReference"
							},
							"name": "StgCompanias"
						},
						{
							"dataset": {
								"referenceName": "DwDimCompanias",
								"type": "DatasetReference"
							},
							"name": "DwCompanias"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "DataWareouse",
								"type": "LinkedServiceReference"
							},
							"name": "InyectarDW"
						}
					],
					"transformations": [
						{
							"name": "Validar"
						}
					],
					"scriptLines": [
						"source(output(",
						"          codigo as string,",
						"          nombre as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> StgCompanias",
						"source(output(",
						"          id as integer,",
						"          codigo as string,",
						"          nombre as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DwCompanias",
						"StgCompanias, DwCompanias exists(StgCompanias@codigo == DwCompanias@codigo,",
						"     negate:true,",
						"     broadcast: 'auto')~> Validar",
						"Validar sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     tableName: 'dimcompanias',",
						"     deletable: false,",
						"     insertable: true,",
						"     updateable: false,",
						"     upsertable: false,",
						"     store: 'mysql',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          codigo,",
						"          nombre",
						"     )) ~> InyectarDW"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/StgCompanias')]",
				"[concat(variables('factoryId'), '/datasets/DwDimCompanias')]",
				"[concat(variables('factoryId'), '/linkedServices/DataWareouse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Inyectar Estados')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Inyectar Dimensiones"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "StgEstados",
								"type": "DatasetReference"
							},
							"name": "StgEstados"
						},
						{
							"dataset": {
								"referenceName": "DwDimEstados",
								"type": "DatasetReference"
							},
							"name": "DwEstados"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "DataWareouse",
								"type": "LinkedServiceReference"
							},
							"name": "InyectarDW"
						}
					],
					"transformations": [
						{
							"name": "Validar"
						}
					],
					"scriptLines": [
						"source(output(",
						"          codigo as string,",
						"          nombre as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> StgEstados",
						"source(output(",
						"          id as integer,",
						"          codigo as string,",
						"          nombre as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DwEstados",
						"StgEstados, DwEstados exists(StgEstados@codigo == DwEstados@codigo,",
						"     negate:true,",
						"     broadcast: 'auto')~> Validar",
						"Validar sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     tableName: 'dimEstados',",
						"     deletable: false,",
						"     insertable: true,",
						"     updateable: false,",
						"     upsertable: false,",
						"     store: 'mysql',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          codigo,",
						"          nombre",
						"     )) ~> InyectarDW"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/StgEstados')]",
				"[concat(variables('factoryId'), '/datasets/DwDimEstados')]",
				"[concat(variables('factoryId'), '/linkedServices/DataWareouse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Inyectar Grupos')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Inyectar Dimensiones"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "StgGrupos",
								"type": "DatasetReference"
							},
							"name": "StgGrupos"
						},
						{
							"dataset": {
								"referenceName": "DwDimGrupos",
								"type": "DatasetReference"
							},
							"name": "DwGrupos"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "DataWareouse",
								"type": "LinkedServiceReference"
							},
							"name": "InyectarDW"
						}
					],
					"transformations": [
						{
							"name": "Validar"
						}
					],
					"scriptLines": [
						"source(output(",
						"          codigo as string,",
						"          nombre as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> StgGrupos",
						"source(output(",
						"          id as integer,",
						"          codigo as string,",
						"          nombre as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DwGrupos",
						"StgGrupos, DwGrupos exists(StgGrupos@codigo == DwGrupos@codigo,",
						"     negate:true,",
						"     broadcast: 'auto')~> Validar",
						"Validar sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     tableName: 'dimgrupos',",
						"     deletable: false,",
						"     insertable: true,",
						"     updateable: false,",
						"     upsertable: false,",
						"     store: 'mysql',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          codigo,",
						"          nombre",
						"     )) ~> InyectarDW"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/StgGrupos')]",
				"[concat(variables('factoryId'), '/datasets/DwDimGrupos')]",
				"[concat(variables('factoryId'), '/linkedServices/DataWareouse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Inyectar Origenes')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Inyectar Dimensiones"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "StgOrigenes",
								"type": "DatasetReference"
							},
							"name": "StgOrigenes"
						},
						{
							"dataset": {
								"referenceName": "DwDimOrigenes",
								"type": "DatasetReference"
							},
							"name": "DwOrigenes"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "DataWareouse",
								"type": "LinkedServiceReference"
							},
							"name": "InyectarDW"
						}
					],
					"transformations": [
						{
							"name": "Validar"
						}
					],
					"scriptLines": [
						"source(output(",
						"          codigo as string,",
						"          nombre as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> StgOrigenes",
						"source(output(",
						"          id as integer,",
						"          codigo as string,",
						"          nombre as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DwOrigenes",
						"StgOrigenes, DwOrigenes exists(StgOrigenes@codigo == DwOrigenes@codigo,",
						"     negate:true,",
						"     broadcast: 'auto')~> Validar",
						"Validar sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     tableName: 'dimorigenes',",
						"     deletable: false,",
						"     insertable: true,",
						"     updateable: false,",
						"     upsertable: false,",
						"     store: 'mysql',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          codigo,",
						"          nombre",
						"     )) ~> InyectarDW"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/StgOrigenes')]",
				"[concat(variables('factoryId'), '/datasets/DwDimOrigenes')]",
				"[concat(variables('factoryId'), '/linkedServices/DataWareouse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Inyectar Prioridades')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Inyectar Dimensiones"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "StgPrioridad",
								"type": "DatasetReference"
							},
							"name": "StgPrioridades"
						},
						{
							"dataset": {
								"referenceName": "DwDimPrioridades",
								"type": "DatasetReference"
							},
							"name": "DwPrioridades"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "DataWareouse",
								"type": "LinkedServiceReference"
							},
							"name": "InyectarDW"
						}
					],
					"transformations": [
						{
							"name": "Validar"
						}
					],
					"scriptLines": [
						"source(output(",
						"          codigo as string,",
						"          nombre as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> StgPrioridades",
						"source(output(",
						"          id as integer,",
						"          codigo as string,",
						"          nombre as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DwPrioridades",
						"StgPrioridades, DwPrioridades exists(StgPrioridades@codigo == DwPrioridades@codigo,",
						"     negate:true,",
						"     broadcast: 'auto')~> Validar",
						"Validar sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     tableName: 'dimprioridades',",
						"     deletable: false,",
						"     insertable: true,",
						"     updateable: false,",
						"     upsertable: false,",
						"     store: 'mysql',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          codigo,",
						"          nombre",
						"     )) ~> InyectarDW"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/StgPrioridad')]",
				"[concat(variables('factoryId'), '/datasets/DwDimPrioridades')]",
				"[concat(variables('factoryId'), '/linkedServices/DataWareouse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Inyectar Productos')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Inyectar Dimensiones"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "StgProductos",
								"type": "DatasetReference"
							},
							"name": "StgProductos"
						},
						{
							"dataset": {
								"referenceName": "DwDimProductos",
								"type": "DatasetReference"
							},
							"name": "DwProductos"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "DataWareouse",
								"type": "LinkedServiceReference"
							},
							"name": "InyectarDW"
						}
					],
					"transformations": [
						{
							"name": "Validar"
						}
					],
					"scriptLines": [
						"source(output(",
						"          codigo as string,",
						"          nombre as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> StgProductos",
						"source(output(",
						"          id as integer,",
						"          codigo as string,",
						"          nombre as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DwProductos",
						"StgProductos, DwProductos exists(StgProductos@codigo == DwProductos@codigo,",
						"     negate:true,",
						"     broadcast: 'auto')~> Validar",
						"Validar sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     tableName: 'dimproductos',",
						"     deletable: false,",
						"     insertable: true,",
						"     updateable: false,",
						"     upsertable: false,",
						"     store: 'mysql',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          codigo,",
						"          nombre",
						"     )) ~> InyectarDW"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/StgProductos')]",
				"[concat(variables('factoryId'), '/datasets/DwDimProductos')]",
				"[concat(variables('factoryId'), '/linkedServices/DataWareouse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Inyectar SLA')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Inyectar Dimensiones"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "StgSLA",
								"type": "DatasetReference"
							},
							"name": "StgSla"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DwDimSla",
								"type": "DatasetReference"
							},
							"name": "Insert"
						}
					],
					"transformations": [
						{
							"name": "Select"
						}
					],
					"scriptLines": [
						"source(output(",
						"          id as integer,",
						"          codigo as string,",
						"          nombre as string,",
						"          descipcion as string,",
						"          isactive as boolean,",
						"          isdefault as boolean,",
						"          posicion as integer,",
						"          fecha as string,",
						"          fechaModificacion as string,",
						"          companyid as string,",
						"          slaTargetPriority1RespondWithin as decimal(18,4),",
						"          slaTargerPriority1ResolveWithin as decimal(18,4),",
						"          slaTargetPriority2RespondWithin as decimal(18,4),",
						"          slaTargerPriority2ResolveWithin as decimal(18,4),",
						"          slaTargetPriority3RespondWithin as decimal(18,4),",
						"          slaTargerPriority3ResolveWithin as decimal(18,4),",
						"          slaTargetPriority4RespondWithin as decimal(18,4),",
						"          slaTargerPriority4ResolveWithin as decimal(18,4)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     query: 'select\\n    0 id,\\n    codigo,\\n    nombre,\\n    descipcion,\\n    isactive,     \\n    isdefault,\\n    posicion,\\n    REPLACE(REPLACE(fechaAlta, \\'T\\', \\' \\') ,\\'Z\\',\\'\\')fecha, \\n     REPLACE(REPLACE(fechaModificacion, \\'T\\', \\' \\') ,\\'Z\\',\\'\\')  fechaModificacion,\\n    companyid ,\\n    slaTargetPriority1RespondWithin     ,\\n    slaTargerPriority1ResolveWithin     , \\n    slaTargetPriority2RespondWithin     ,\\n    slaTargerPriority2ResolveWithin     ,   \\n    slaTargetPriority3RespondWithin     ,\\n    slaTargerPriority3ResolveWithin     ,    \\n    slaTargetPriority4RespondWithin     ,\\n    slaTargerPriority4ResolveWithin     \\nfrom Sla',",
						"     format: 'query') ~> StgSla",
						"StgSla select(skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> Select",
						"Select sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id as integer,",
						"          codigo as string,",
						"          nombre as string,",
						"          descipcion as string,",
						"          activo as integer,",
						"          prederterminado as integer,",
						"          posicion as integer,",
						"          fechaAlta as timestamp,",
						"          fechaModificacion as timestamp,",
						"          companiaid as string,",
						"          TiempoRespuestaPrioridad1 as decimal(18,4),",
						"          TiempoResolucionPrioridad1 as decimal(18,4),",
						"          TiempoRespuestaPrioridad2 as decimal(18,4),",
						"          TiempoResolucionPrioridad2 as decimal(18,4),",
						"          TiempoRespuestaPrioridad3 as decimal(18,4),",
						"          TiempoResolucionPrioridad3 as decimal(18,4),",
						"          TiempoRespuestaPrioridad4 as decimal(18,4),",
						"          TiempoResolucionPrioridad4 as decimal(18,4)",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     preSQLs:['Truncate Table dimSLA'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     saveOrder: 1,",
						"     mapColumn(",
						"          codigo,",
						"          nombre,",
						"          descipcion,",
						"          activo = isactive,",
						"          prederterminado = isdefault,",
						"          posicion,",
						"          companiaid = companyid,",
						"          TiempoRespuestaPrioridad1 = slaTargetPriority1RespondWithin,",
						"          TiempoResolucionPrioridad1 = slaTargerPriority1ResolveWithin,",
						"          TiempoRespuestaPrioridad2 = slaTargetPriority2RespondWithin,",
						"          TiempoResolucionPrioridad2 = slaTargerPriority2ResolveWithin,",
						"          TiempoRespuestaPrioridad3 = slaTargetPriority3RespondWithin,",
						"          TiempoResolucionPrioridad3 = slaTargerPriority3ResolveWithin,",
						"          TiempoRespuestaPrioridad4 = slaTargetPriority4RespondWithin,",
						"          TiempoResolucionPrioridad4 = slaTargerPriority4ResolveWithin,",
						"          fechaAlta = fecha,",
						"          fechaModificacion",
						"     )) ~> Insert"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/StgSLA')]",
				"[concat(variables('factoryId'), '/datasets/DwDimSla')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Inyectar Tipos')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Inyectar Dimensiones"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "StgTipos",
								"type": "DatasetReference"
							},
							"name": "StgTipos"
						},
						{
							"dataset": {
								"referenceName": "DwDimTiposTicket",
								"type": "DatasetReference"
							},
							"name": "DwTipos"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "DataWareouse",
								"type": "LinkedServiceReference"
							},
							"name": "InyectarDW"
						}
					],
					"transformations": [
						{
							"name": "Validar"
						}
					],
					"scriptLines": [
						"source(output(",
						"          codigo as string,",
						"          nombre as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> StgTipos",
						"source(output(",
						"          id as integer,",
						"          codigo as string,",
						"          nombre as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> DwTipos",
						"StgTipos, DwTipos exists(StgTipos@codigo == DwTipos@codigo,",
						"     negate:true,",
						"     broadcast: 'auto')~> Validar",
						"Validar sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     tableName: 'dimtiposticket',",
						"     deletable: false,",
						"     insertable: true,",
						"     updateable: false,",
						"     upsertable: false,",
						"     store: 'mysql',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          codigo,",
						"          nombre",
						"     )) ~> InyectarDW"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/StgTipos')]",
				"[concat(variables('factoryId'), '/datasets/DwDimTiposTicket')]",
				"[concat(variables('factoryId'), '/linkedServices/DataWareouse')]"
			]
		}
	]
}