{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Nombre de instancia de Data Factory",
			"defaultValue": "Autocorp"
		},
		"AF_DW_functionKey": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"functionKey\"de \"AF_DW\""
		},
		"AF_InyectarTickets_functionKey": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"functionKey\"de \"AF_InyectarTickets\""
		},
		"APIFresh_password": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"password\"de \"APIFresh\""
		},
		"ApiAgente_password": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"password\"de \"ApiAgente\""
		},
		"ApiConversariones_password": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"password\"de \"ApiConversariones\""
		},
		"EfleetDB_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"EfleetDB\""
		},
		"FreshDB_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"FreshDB\""
		},
		"Logs Fabric_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"Logs Fabric\""
		},
		"SqlAutocorpDw_password": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"password\"de \"SqlAutocorpDw\""
		},
		"Storege_Fresh_connectionString": {
			"type": "secureString",
			"metadata": "Cadena protegida para \"connectionString\"de \"Storege_Fresh\""
		},
		"AF_DW_properties_typeProperties_functionAppUrl": {
			"type": "string",
			"defaultValue": "https://dwservices.azurewebsites.net"
		},
		"AF_InyectarTickets_properties_typeProperties_functionAppUrl": {
			"type": "string",
			"defaultValue": "https://inyectartickets.azurewebsites.net"
		},
		"APIFresh_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://autocorpar.freshdesk.com/api/v2/sla_policies"
		},
		"APIFresh_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "yBjVC7W3wuMLeucdH4Hw"
		},
		"ApiAgente_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://autocorpar.freshdesk.com/api/v2/agents/"
		},
		"ApiAgente_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "yBjVC7W3wuMLeucdH4Hw"
		},
		"ApiConversariones_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://autocorpar.freshdesk.com/api/v2/tickets/93311/conversations"
		},
		"ApiConversariones_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "yBjVC7W3wuMLeucdH4Hw"
		},
		"ApiTickets_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://autocorpdwapi.azurewebsites.net/api/freshwork/tickets"
		},
		"SqlAutocorpDw_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "autocorpdw.database.windows.net"
		},
		"SqlAutocorpDw_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "Autocorp_dw"
		},
		"SqlAutocorpDw_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "autocorp"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/001-Inyectar Dimensiones Efleet')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Intectar vehiculos",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "select \r\nvehicles.id codigo,\r\ncontract_id contratoId,\r\npolicy_id policyId,\r\n`description` descripcion,\r\n`code` codigoDeVehiculo,\r\ncolor,\r\nchassis,\r\nplate patente,\r\n`year` anio,\r\nvtv_due_date fechaVencimientoVTV,\r\ncardoc_due_date fechaVencimientoDocument,\r\nwarranty_up_to_km garantiaHastaKm,\r\nwarranty_up_to_date fechaActualizadaGarantia,\r\nwarranty_state garantiaEstado,\r\nis_fleet_owner isPropietarioFlota,\r\nlast_km ultimoKilometraje,\r\nlast_km_origin ultimoKilometrajeOrigen,\r\nlast_km_date fechaUltimoKm,\r\nservice_last_km servicioUltimoKm,\r\nservice_origin origenServicio,\r\ncase when year(service_last_date)<1990 then null else service_last_date end ultimaFechaServicio,\r\ncondition_type tipoCondicion,\r\ncategory_client categoriaCliente,\r\ngroup_category_client grupoCategoriaCliente ,\r\nfuel_card_number numeroTarjetaCombustible,\r\ntoll_card_number numeroTarjetaPeaje,\r\nhas_circulation_documents tieneDocumentoCirculacion,\r\ninsurance_ammount montoSeguro,\r\nversion_id versionID,\r\nvehicle_state_id vehiculoEstadoID,\r\nclient_structure_id clienteEstructuraID,\r\ninsurance_id seguroID,\r\ngps_provider_id proveedorGpsId,\r\nhas_duplicated_key tieneClaveDuplicado,\r\ngps_vehicle_number numeroGPS,\r\ngps_detail detalleGPS,\r\ngps_ammount gpsMonto,\r\nvtv_last_date ultimaFechaVTV,\r\nduplicated_key_date fechaClaveDuplicada,\r\nvtv_last_city_id ultimaCiudadVTVID,\r\nplate_city_id patenteCuidadID,\r\ngps_is_visible gpsIsVisible,\r\nowner_name propietario,\r\nowner_contact_id propietarioContactoID,\r\nmaintenance_plan_id planMantenimientoID,\r\nleasing_duedate arrendamientoFechaVencimiento,\r\nrto_due_date fechaDeRetiro,\r\nvtv_km_expiration kmVencimientoVTV,\r\nfuel_provider proveedorCombustible,\r\nservice_last_task_id UltimaTareaID,\r\ninsurance_start_date fechaInicioSeguro,\r\nsend_expiration_mailing ,\r\nvehicles.hansa_code codigoHansa,\r\nlast_expiration_check fechaUltimaComparacion,\r\nvtv_caba_text vtvCabaTexto,\r\ninfoauto_price precioInfoauto,\r\ninfoauto_price_date fechaPrecioInfoAuto,\r\nvs.name estado,\r\nmotor_number\r\n\r\nfrom vehicles\r\nleft outer join vehicle_states vs on vs.id = vehicles.vehicle_state_id",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"codigo"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "codigo",
											"type": "UInt64"
										},
										"sink": {
											"name": "codigo",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "contratoId",
											"type": "UInt64"
										},
										"sink": {
											"name": "contratoId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "policyId",
											"type": "UInt64"
										},
										"sink": {
											"name": "policyId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "descripcion",
											"type": "String"
										},
										"sink": {
											"name": "descripcion",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "codigoDeVehiculo",
											"type": "String"
										},
										"sink": {
											"name": "codigoDeVehiculo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "color",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "color",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "chassis",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "chassis",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "patente",
											"type": "String"
										},
										"sink": {
											"name": "patente",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "anio",
											"type": "Int32"
										},
										"sink": {
											"name": "anio",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "fechaVencimientoVTV",
											"type": "DateTime"
										},
										"sink": {
											"name": "fechaVencimientoVTV",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "fechaVencimientoDocument",
											"type": "DateTime"
										},
										"sink": {
											"name": "fechaVencimientoDocumento",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "garantiaHastaKm",
											"type": "Int32"
										},
										"sink": {
											"name": "garantiaHastaKm",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "fechaActualizadaGarantia",
											"type": "DateTime"
										},
										"sink": {
											"name": "fechaActualizadaGarantia",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "garantiaEstado",
											"type": "Boolean"
										},
										"sink": {
											"name": "garantiaVigente",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "isPropietarioFlota",
											"type": "Boolean"
										},
										"sink": {
											"name": "isPropietarioFlota",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ultimoKilometraje",
											"type": "Int32"
										},
										"sink": {
											"name": "ultimoKilometraje",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "ultimoKilometrajeOrigen",
											"type": "String"
										},
										"sink": {
											"name": "ultimoKilometrajeOrigen",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "fechaUltimoKm",
											"type": "DateTime"
										},
										"sink": {
											"name": "fechaUltimoKm",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "servicioUltimoKm",
											"type": "Int32"
										},
										"sink": {
											"name": "servicioUltimoKm",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "origenServicio",
											"type": "String"
										},
										"sink": {
											"name": "origenServicio",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ultimaFechaServicio",
											"type": "DateTime"
										},
										"sink": {
											"name": "ultimaFechaServicio",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "tipoCondicion",
											"type": "String"
										},
										"sink": {
											"name": "tipoCondicion",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "categoriaCliente",
											"type": "String"
										},
										"sink": {
											"name": "categoriaCliente",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "grupoCategoriaCliente",
											"type": "String"
										},
										"sink": {
											"name": "grupoCategoriaCliente",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "numeroTarjetaCombustible",
											"type": "String"
										},
										"sink": {
											"name": "numeroTarjetaCombustible",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "numeroTarjetaPeaje",
											"type": "String"
										},
										"sink": {
											"name": "numeroTarjetaPeaje",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "tieneDocumentoCirculacion",
											"type": "Boolean"
										},
										"sink": {
											"name": "tieneDocumentoCirculacion",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "montoSeguro",
											"type": "Double"
										},
										"sink": {
											"name": "montoSeguro",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "versionID",
											"type": "UInt64"
										},
										"sink": {
											"name": "versionId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "vehiculoEstadoID",
											"type": "UInt64"
										},
										"sink": {
											"name": "vehiculoEstadoId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "clienteEstructuraID",
											"type": "UInt64"
										},
										"sink": {
											"name": "clienteEstructuraId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "seguroID",
											"type": "UInt64"
										},
										"sink": {
											"name": "seguroId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "proveedorGpsId",
											"type": "UInt64"
										},
										"sink": {
											"name": "proveedorGpsId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "tieneClaveDuplicado",
											"type": "Boolean"
										},
										"sink": {
											"name": "tieneClaveDuplicado",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "numeroGPS",
											"type": "String"
										},
										"sink": {
											"name": "numeroGPS",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "detalleGPS",
											"type": "String"
										},
										"sink": {
											"name": "detalleGPS",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "gpsMonto",
											"type": "Int32"
										},
										"sink": {
											"name": "gpsMonto",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "ultimaFechaVTV",
											"type": "DateTime"
										},
										"sink": {
											"name": "ultimaFechaVTV",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "fechaClaveDuplicada",
											"type": "DateTime"
										},
										"sink": {
											"name": "fechaClaveDuplicada",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "ultimaCiudadVTVID",
											"type": "UInt64"
										},
										"sink": {
											"name": "ultimaCiudadVTVId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "patenteCuidadID",
											"type": "UInt64"
										},
										"sink": {
											"name": "patenteCuidadId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "gpsIsVisible",
											"type": "Boolean"
										},
										"sink": {
											"name": "gpsIsVisible",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "propietario",
											"type": "String"
										},
										"sink": {
											"name": "propietario",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "propietarioContactoID",
											"type": "UInt64"
										},
										"sink": {
											"name": "propietarioContactoId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "planMantenimientoID",
											"type": "UInt64"
										},
										"sink": {
											"name": "planMantenimientoId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "arrendamientoFechaVencimiento",
											"type": "DateTime"
										},
										"sink": {
											"name": "arrendamientoFechaVencimiento",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "fechaDeRetiro",
											"type": "DateTime"
										},
										"sink": {
											"name": "fechaDeRetiro",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "kmVencimientoVTV",
											"type": "Int32"
										},
										"sink": {
											"name": "kmVencimientoVTV",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "proveedorCombustible",
											"type": "String"
										},
										"sink": {
											"name": "proveedorCombustible",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UltimaTareaID",
											"type": "UInt64"
										},
										"sink": {
											"name": "UltimaTareaId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "fechaInicioSeguro",
											"type": "DateTime"
										},
										"sink": {
											"name": "fechaInicioSeguro",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "codigoHansa",
											"type": "String"
										},
										"sink": {
											"name": "codigoHansa",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "fechaUltimaComparacion",
											"type": "DateTime"
										},
										"sink": {
											"name": "fechaUltimaComparacion",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "vtvCabaTexto",
											"type": "String"
										},
										"sink": {
											"name": "vtvCabaTexto",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "precioInfoauto",
											"type": "Decimal"
										},
										"sink": {
											"name": "precioInfoauto",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "fechaPrecioInfoAuto",
											"type": "DateTime"
										},
										"sink": {
											"name": "fechaPrecioInfoAuto",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "estado",
											"type": "String"
										},
										"sink": {
											"name": "estado",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "motor_number",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "numeroMotor",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": false,
									"treatBooleanAsNumber": true
								}
							}
						},
						"inputs": [
							{
								"referenceName": "EfleetVehiculo",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dimVehiculos",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Inyectar Tipos Orden de Trabajo",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"codigo"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "UInt64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "codigo",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "nombre",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "hansa_code",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "hansacode",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "EfleetOrdenTrabajoTipo",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dimOrdenTrabajoTipo",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Inyectar Tareas Orden de trabajo",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "select \n    t.id codigo,\n    t.name nombre,\n    t.description descripcion,\n    t.hansa_code,\n    c.name nombreCategoria,\n    c.description descripcionCategoria\nfrom tasks t\nleft join categories c on c.id = t.category_id\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"codigo"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "codigo",
											"type": "UInt64"
										},
										"sink": {
											"name": "codigo",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "nombre",
											"type": "String"
										},
										"sink": {
											"name": "nombre",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "descripcion",
											"type": "String"
										},
										"sink": {
											"name": "descripcion",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "nombreCategoria",
											"type": "String"
										},
										"sink": {
											"name": "nombreCategoria",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "descripcionCategoria",
											"type": "String"
										},
										"sink": {
											"name": "descripcionCategoria",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "EfleetTareas",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dimTareas",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Inyectar Ordenes Trabajo",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "select \r\n   wo.id work_order_id,\r\n   task_id,\r\n   work_order_task_action_id, \r\n   v.id vehiculo_id,\r\n   woty.id work_order_type_id,\r\n   wo.`name` nombreOrdenTrabajo,\r\n   wo.state estadoOrdenTarbajo,\r\n   case \r\n    when woty.id !=2 then wot.total_s_iva_price\r\n    else 0\r\n   end total_s_iva_no_Sinistro,\r\n\r\n   case \r\n    when woty.id !=2 then 1\r\n    else 0\r\n   end EsSeguro,\r\n\r\n   case \r\n    when woty.id = 2 then 1\r\n    else 0\r\n   end EsSinietro,\r\n\r\n   case \r\n    when woty.id =2 then wot.total_s_iva_price\r\n    else 0\r\n   end total_s_iva_Siniestro,\r\n\r\n   wot.workforce_s_iva_price costoManoObraSinIva,\r\n   wot.materials_s_iva_price costoMaterialSinIVa,\r\n   wot.total_s_iva_Price costoTotalSinIva, \r\n   wot.workforce_price costoManoObra,\r\n   wot.materials_price costoMaterial,\r\n   wot.total_Price costoTotal,\r\n   wot.workforce_discount descuentoManoObra,\r\n   wot.materials_price descuentoMaterial,\r\n   wot.total_Price descuentoTotal,\r\n   wo.created_at fechaCreacion,\r\n   wo.updated_at fechaActualizacion\r\nfrom work_orders wo\r\nleft join work_order_tasks wot on wot.work_order_id = wo.id\r\ninner join work_order_types woty on woty.id = wo.work_order_type_id\r\nINNER join vehicles v on v.plate = wo.plate\r\nwhere wo.id is not null",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"ordenTrabajoCodigo"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "work_order_id",
											"type": "UInt64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "ordenTrabajoCodigo",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "task_id",
											"type": "UInt64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "tareaCodigo",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "work_order_task_action_id",
											"type": "UInt64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "tareaAccionCodigo",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "vehiculo_id",
											"type": "UInt64"
										},
										"sink": {
											"name": "vehiculoCodigo",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "work_order_type_id",
											"type": "UInt64"
										},
										"sink": {
											"name": "ordenTabajoTipoCodigo",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "nombreOrdenTrabajo",
											"type": "String"
										},
										"sink": {
											"name": "nombreOrdenTrabajo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "estadoOrdenTarbajo",
											"type": "String"
										},
										"sink": {
											"name": "estadoOrdenTarbajo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "total_s_iva_no_Sinistro",
											"type": "Double"
										},
										"sink": {
											"name": "totalSivaNoSiniestro",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "EsSeguro",
											"type": "Int64"
										},
										"sink": {
											"name": "esSeguro",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "EsSinietro",
											"type": "Int64"
										},
										"sink": {
											"name": "esSinietro",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "total_s_iva_Siniestro",
											"type": "Double"
										},
										"sink": {
											"name": "totalSivaSiniestro",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "costoManoObraSinIva",
											"type": "Double"
										},
										"sink": {
											"name": "costoManoObraSinIva",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "costoMaterialSinIVa",
											"type": "Double"
										},
										"sink": {
											"name": "costoMaterialSinIVa",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "costoTotalSinIva",
											"type": "Double"
										},
										"sink": {
											"name": "costoTotalSinIva",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "costoManoObra",
											"type": "Double"
										},
										"sink": {
											"name": "costoManoObra",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "costoMaterial",
											"type": "Double"
										},
										"sink": {
											"name": "costoMaterial",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "costoTotal",
											"type": "Double"
										},
										"sink": {
											"name": "costoTotal",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "descuentoManoObra",
											"type": "Double"
										},
										"sink": {
											"name": "descuentoManoObra",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "descuentoMaterial",
											"type": "Double"
										},
										"sink": {
											"name": "descuentoMaterial",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "descuentoTotal",
											"type": "Double"
										},
										"sink": {
											"name": "descuentoTotal",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "fechaCreacion",
											"type": "DateTime"
										},
										"sink": {
											"name": "fechaCreacion",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									},
									{
										"source": {
											"name": "fechaActualizacion",
											"type": "DateTime"
										},
										"sink": {
											"name": "fechaActualizacion",
											"type": "DateTime",
											"physicalType": "datetime2"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "EfleetOrdenesTrabajoTareas",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "stgOrdenesTrabajoTareas",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "EFleet"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/EfleetVehiculo')]",
				"[concat(variables('factoryId'), '/datasets/dimVehiculos')]",
				"[concat(variables('factoryId'), '/datasets/EfleetOrdenTrabajoTipo')]",
				"[concat(variables('factoryId'), '/datasets/dimOrdenTrabajoTipo')]",
				"[concat(variables('factoryId'), '/datasets/EfleetTareas')]",
				"[concat(variables('factoryId'), '/datasets/dimTareas')]",
				"[concat(variables('factoryId'), '/datasets/EfleetOrdenesTrabajoTareas')]",
				"[concat(variables('factoryId'), '/datasets/stgOrdenesTrabajoTareas')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/001-Orquestador')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Inyectar_Data_Fresh",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Iyectar Tickets Api Fresh To Stg",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "003-Inyectar_Dimensiones_Fresh_To_DW",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Inyectar_SLA",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Inyectar_Data_Fresh",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "004-Inyecar_Hechos_Fresh_To_Staiging",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Inyectar_FactTickets",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Inyectar_SLA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "006-Inyectar_Echos",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Inyecta_Conversaciones_DW",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Inyectar_FactTickets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "005-Inyectar_Fresh_Conversaciones_To_Dw",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Importar Tickets Excel Consolidado",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureFileStorageReadSettings",
									"recursive": false,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureMySqlSink",
								"writeBatchSize": 10000,
								"writeBatchTimeout": "00:00:30",
								"preCopyScript": "delete from freshdesk_tickets"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "cc_emails",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "cc_emails",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "fwd_emails",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "fwd_emails",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "reply_cc_emails",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "reply_cc_emails",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "ticket_cc_emails",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ticket_cc_emails",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "ticket_bcc_emails",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ticket_bcc_emails",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "fr_escalated",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "fr_escalated",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "spam",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "spam",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "email_config_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "email_config_id",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "group_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "group_id",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "priority",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "priority",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "requester_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "requester_id",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "responder_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "responder_id",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "source",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "source",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "company_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "company_id",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "status",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "subject",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "subject",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "association_type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "association_type",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "support_email",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "support_email",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "to_emails",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "to_emails",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "product_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "product_id",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "id",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "type",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "due_by",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "due_by",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "fr_due_by",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "fr_due_by",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "is_escalated",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "is_escalated",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "created_at",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "created_at",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "updated_at",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "updated_at",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "associated_tickets_count",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "associated_tickets_count",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "tags",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "tags",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "nr_due_by",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "nr_due_by",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "nr_escalated",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "nr_escalated",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "form_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "form_id",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "cf_patente",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "cf_patente",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "cf_id_efleet",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "cf_id_efleet",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "cf_generar_ot_efleet",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "cf_generar_ot_efleet",
											"type": "String",
											"physicalType": "text"
										}
									},
									{
										"source": {
											"name": "cf_kilometraje",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "cf_kilometraje",
											"type": "String",
											"physicalType": "text"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "TicketsCnsolidados_xslx",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "FreshTickets",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Iyectar Tickets Api Fresh To Stg",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "002-Importar_Tickets_Fresh_to_Stg",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Inyectar Efleet Dimensiones",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Iyectar Tickets Api Fresh To Stg",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "001-Inyectar Dimensiones Efleet",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Inyectar Efleet FactEfleet",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Inyectar Efleet Dimensiones",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Inyectar_FactTickets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "002-Inyectar Echos Efleet",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"ProcessID": {
						"type": "String"
					},
					"nombre": {
						"type": "String"
					},
					"vId": {
						"type": "String"
					},
					"IdParameter": {
						"type": "String"
					},
					"Fecha": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-01-14T15:43:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/003-Inyectar_Dimensiones_Fresh_To_DW')]",
				"[concat(variables('factoryId'), '/pipelines/004-Inyecar_Hechos_Fresh_To_Staiging')]",
				"[concat(variables('factoryId'), '/pipelines/006-Inyectar_Echos')]",
				"[concat(variables('factoryId'), '/pipelines/005-Inyectar_Fresh_Conversaciones_To_Dw')]",
				"[concat(variables('factoryId'), '/datasets/TicketsCnsolidados_xslx')]",
				"[concat(variables('factoryId'), '/datasets/FreshTickets')]",
				"[concat(variables('factoryId'), '/pipelines/002-Importar_Tickets_Fresh_to_Stg')]",
				"[concat(variables('factoryId'), '/pipelines/001-Inyectar Dimensiones Efleet')]",
				"[concat(variables('factoryId'), '/pipelines/002-Inyectar Echos Efleet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/002-Importar_Tickets_Fresh_to_Stg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Listar fecha",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SqlAutocorpDw",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "----------------------------------------------------------------------------------------------------------\r\n-- Genera el calendario de importacion de tickets, correspondientes a los dias previos a la fecha actual\r\n-- para seletar la cantidad de días modificar el parametro @dias\r\n----------------------------------------------------------------------------------------------------------\r\nDECLARE @FechaInicio DATE, @Dias int = 30;\r\nSET @FechaInicio = (CONVERT(DATE, DATEADD(DAY, @Dias*-1, getdate())));\r\n\r\n;WITH Fechas AS (\r\n    SELECT @FechaInicio AS Fecha\r\n    UNION ALL\r\n    SELECT DATEADD(DAY, 1, Fecha)\r\n    FROM Fechas\r\n    WHERE Fecha < CAST(GETDATE() AS DATE)\r\n)\r\nSELECT *\r\nFROM Fechas\r\norder by 1\r\nOPTION (MAXRECURSION 0);"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "ImportTicketsPorFecha",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Listar fecha",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Listar fecha').output.resultSets[0].rows",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Fecha",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "Fecha",
										"value": {
											"value": "@string(item().Fecha)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Importar Tickets",
									"type": "AzureFunctionActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"functionName": {
											"value": "@concat('ImportarTickets?fechaDesde=',item().Fecha)",
											"type": "Expression"
										},
										"body": {},
										"headers": {},
										"method": "POST"
									},
									"linkedServiceName": {
										"referenceName": "AF_DW",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"pages": {
						"type": "Integer",
						"defaultValue": 1
					},
					"index": {
						"type": "String",
						"defaultValue": "0"
					},
					"Item": {
						"type": "String"
					},
					"Fecha": {
						"type": "String"
					}
				},
				"folder": {
					"name": "FreshDesk"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlAutocorpDw')]",
				"[concat(variables('factoryId'), '/linkedServices/AF_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/002-Inyectar Echos Efleet')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Inyectar Fact",
						"type": "Script",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SqlAutocorpDw",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "\ntruncate table whs.factOrdenesTrabajo\ninsert into whs.factOrdenesTrabajo\nselect \n    ot.ordenTrabajoCodigo codigo,\n    t.id tareaid,\n    null tareaAccionId,\n    v.id vehiculoid,\n    ordenTabajoTipoCodigo ordenTrabajoTipoid,\n    nombreOrdenTrabajo,\n    estadoOrdenTarbajo,\n    totalSivaNoSiniestro,        \n    esSeguro,\n    esSinietro,    \n    totalSivaSiniestro,    \n    costoManoObraSinIva,\n    costoMaterialSinIVa,\n    costoTotalSinIva,\n    costoManoObra,    \n    costoMaterial,\n    costoTotal,\n    descuentoManoObra,\n    descuentoMaterial,    \n    descuentoTotal,\n    fechaCreacion,\n    fechaActualizacion\n\nfrom stg.OrdenesTrabajoTareas ot\nleft join whs.dimVehiculos v on v.codigo = ot.vehiculoCodigo\nleft join whs.dimOrdenTrabajoTipo ott on ott.codigo = ot.ordenTabajoTipoCodigo\nleft join whs.dimTareas t on t.id = ot.tareaCodigo\nwhere ordenTrabajoCodigo is not null"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Fecha": {
						"type": "String"
					}
				},
				"folder": {
					"name": "EFleet"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlAutocorpDw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/003-Inyectar_Dimensiones_Fresh_To_DW')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Inyectar_Origenes_Fresh",
						"description": "",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "select id,\r\nupper(name) name\r\nfrom source_table;\r\n\r\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"codigo"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "codigo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "nombre",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "FreshOrigenes",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dimOrigenes",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Inyectar_Productos_Fresh",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "select id,\nupper(name) name\nfrom product_table;\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"codigo"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "Double",
											"physicalType": "double"
										},
										"sink": {
											"name": "codigo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "nombre",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "FreshProductos",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dimProductos",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Inyectar_Companias_Fresh",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "select id,\nupper(name) name\nfrom freshdesk_companies;\n\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"codigo"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "Double",
											"physicalType": "double"
										},
										"sink": {
											"name": "codigo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "nombre",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "FreshCompanias",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dimCompanias",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Inyectar_Estados_Fresh",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "SELECT id, \nUPPER(TRIM(REPLACE(REPLACE(SUBSTRING_INDEX(name, ',', 1),'[',''),'''',''))) AS  name\nfrom status_table\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"codigo"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "codigo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "nombre",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "FreshEstados",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dimEstados",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Inyectar_Prioridades_Fresh",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "select id,\nupper(name) name\nfrom priority_table;",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"codigo"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "codigo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "nombre",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "FreshPrioridades",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dimPrioridades",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Inyectar_Tipos_Fresh",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "select id,\nupper(name) name\nfrom ticket_type;",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"codigo"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "codigo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "nombre",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "FreshTipos",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dimTiposTickets",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Inyectar_Grupos_Fresh",
						"description": "",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureMySqlSource",
								"query": "select id,\nupper(name) name\nfrom group_table;",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"codigo"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "Double",
											"physicalType": "double"
										},
										"sink": {
											"name": "codigo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String",
											"physicalType": "text"
										},
										"sink": {
											"name": "nombre",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "FreshGrupos",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dimGrupos",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Inyectar_Agentes_Fresh_Api",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"codigo"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['id']"
										},
										"sink": {
											"name": "codigo",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['contact']['name']"
										},
										"sink": {
											"name": "nombre",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "Api_Agentes",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dimAgentes",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"IdForEach": {
						"type": "Integer"
					},
					"Fecha": {
						"type": "String"
					}
				},
				"folder": {
					"name": "FreshDesk"
				},
				"annotations": [],
				"lastPublishTime": "2025-01-13T18:22:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/FreshOrigenes')]",
				"[concat(variables('factoryId'), '/datasets/dimOrigenes')]",
				"[concat(variables('factoryId'), '/datasets/FreshProductos')]",
				"[concat(variables('factoryId'), '/datasets/dimProductos')]",
				"[concat(variables('factoryId'), '/datasets/FreshCompanias')]",
				"[concat(variables('factoryId'), '/datasets/dimCompanias')]",
				"[concat(variables('factoryId'), '/datasets/FreshEstados')]",
				"[concat(variables('factoryId'), '/datasets/dimEstados')]",
				"[concat(variables('factoryId'), '/datasets/FreshPrioridades')]",
				"[concat(variables('factoryId'), '/datasets/dimPrioridades')]",
				"[concat(variables('factoryId'), '/datasets/FreshTipos')]",
				"[concat(variables('factoryId'), '/datasets/dimTiposTickets')]",
				"[concat(variables('factoryId'), '/datasets/FreshGrupos')]",
				"[concat(variables('factoryId'), '/datasets/dimGrupos')]",
				"[concat(variables('factoryId'), '/datasets/Api_Agentes')]",
				"[concat(variables('factoryId'), '/datasets/dimAgentes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/004-Inyecar_Hechos_Fresh_To_Staiging')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Inyectar_SLA_API",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"codigo"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['id']"
										},
										"sink": {
											"name": "codigo",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['name']"
										},
										"sink": {
											"name": "nombre",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['description']"
										},
										"sink": {
											"name": "descipcion",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['active']"
										},
										"sink": {
											"name": "isactive",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['sla_target']['priority_4']['respond_within']"
										},
										"sink": {
											"name": "slaTargetPriority4RespondWithin",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['sla_target']['priority_4']['resolve_within']"
										},
										"sink": {
											"name": "slaTargerPriority4ResolveWithin",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['sla_target']['priority_3']['respond_within']"
										},
										"sink": {
											"name": "slaTargetPriority3RespondWithin",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['sla_target']['priority_3']['resolve_within']"
										},
										"sink": {
											"name": "slaTargerPriority3ResolveWithin",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['sla_target']['priority_2']['respond_within']"
										},
										"sink": {
											"name": "slaTargetPriority2RespondWithin",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['sla_target']['priority_2']['resolve_within']"
										},
										"sink": {
											"name": "slaTargerPriority2ResolveWithin",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['sla_target']['priority_1']['respond_within']"
										},
										"sink": {
											"name": "slaTargetPriority1RespondWithin",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['sla_target']['priority_1']['resolve_within']"
										},
										"sink": {
											"name": "slaTargerPriority1ResolveWithin",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"path": "$['escalation']['reminder_resolution']['agent_ids'][0]"
										},
										"sink": {
											"name": "escalationReminderResolutionAgentids",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['escalation']['resolution']['level_1']['agent_ids'][0]"
										},
										"sink": {
											"name": "escalationResolutionLevel1AgentId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['applicable_to']['company_ids'][0]"
										},
										"sink": {
											"name": "companyid",
											"type": "String"
										}
									}
								],
								"collectionReference": ""
							}
						},
						"inputs": [
							{
								"referenceName": "Fresh_SLA",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "dimSla",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Ids": {
						"type": "Array",
						"defaultValue": [
							"[['a','b','c']"
						]
					},
					"vId": {
						"type": "String"
					}
				},
				"folder": {
					"name": "FreshDesk"
				},
				"annotations": [],
				"lastPublishTime": "2025-01-14T18:54:25Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Fresh_SLA')]",
				"[concat(variables('factoryId'), '/datasets/dimSla')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/005-Inyectar_Fresh_Conversaciones_To_Dw')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Conversaciones by Ticket",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Ticktes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Ticktes').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Set variable IdParameter",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "IdParameter",
										"value": {
											"value": "@string(item().codigo)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Insertar Conversaciones",
									"type": "AzureFunctionActivity",
									"dependsOn": [
										{
											"activity": "Set variable IdParameter",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"functionName": {
											"value": "@concat('ImportarConversaciones?codigo=',item().codigo)",
											"type": "Expression"
										},
										"headers": {},
										"method": "GET"
									},
									"linkedServiceName": {
										"referenceName": "AF_DW",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Get Ticktes",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT codigo FROM whs.v_getConversaciones",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "stgTickets",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Update FactTickets Fecha Primer Respuesta",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Get Conversaciones by Ticket",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SqlAutocorpDw",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "update whs.factTickets set FechaPrimerRespuesta = r1.fechaRespuesta\r\nfrom\r\n(\r\nSELECT  id codigo, created_at fechaRespuesta\r\nFROM  stg.Conversaciones \r\nwhere created_at is not null\r\n) as r1\r\nwhere whs.factTickets.codigo = r1.codigo"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"IdParameter": {
						"type": "String"
					},
					"Fecha": {
						"type": "String"
					}
				},
				"folder": {
					"name": "FreshDesk"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/stgTickets')]",
				"[concat(variables('factoryId'), '/linkedServices/SqlAutocorpDw')]",
				"[concat(variables('factoryId'), '/linkedServices/AF_DW')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/006-Inyectar_Echos')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Inyectar_Dw_FactTickets",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select distinct\r\nt.codigo,\r\nDATEADD(HOUR,-3, t.fechaAlta)fechaAlta,\r\nDATEADD(HOUR,-3,t.fechaModificacion) fechaModificacion,\r\nc.id companiaId,\r\ne.id estadoId,\r\ntt.id  tipoId,\r\np.id productoId,\r\ng.id grupoId,\r\no.id origenId,\r\npr.id prioridadId,\r\na.id agenteId,\r\nsla.id slaId,\r\ncase \r\n    when pr.codigo = 1 then sla.slaTargerPriority1ResolveWithin /60\r\n    when pr.codigo = 2 then sla.slaTargerPriority2ResolveWithin /60\r\n    when pr.codigo = 3 then sla.slaTargerPriority3ResolveWithin /60\r\n    when pr.codigo = 4 then sla.slaTargerPriority4ResolveWithin /60\r\nend SlaResolucion,\r\ncase \r\n    when pr.codigo = 1 then sla.slaTargetPriority1RespondWithin /60\r\n    when pr.codigo = 2 then sla.slaTargetPriority2RespondWithin /60\r\n    when pr.codigo = 3 then sla.slaTargetPriority3RespondWithin /60\r\n    when pr.codigo = 4 then sla.slaTargetPriority4RespondWithin /60\r\nend SlaRespuesta,\r\ncase \r\n    when wt.FechaPrimerRespuesta is not null then DATEADD(HOUR,-3, wt.FechaPrimerRespuesta)\r\nelse DATEADD(HOUR,-3, presp.FechaPrimerRespuesta)\r\nend FechaPrimerRespuesta,\r\nt.horasDiferecia,\r\nt.minutosDiferencia\r\n\r\nfrom stg.tickets t \r\nleft join whs.dimCompanias c on c.codigo = t.companiaCodigo\r\nleft join whs.dimEstados e on e.codigo = t.estadoCodigo\r\nleft join whs.dimTiposTicket tt on tt.nombre = t.tipoCodigo\r\nleft join whs.dimProductos p on p.codigo = t.productoCodigo\r\nleft join whs.dimGrupos g on g.codigo = t.grupoCodigo\r\nleft join whs.dimOrigenes o on o.codigo = t.origenCodigo\r\nleft join whs.dimPrioridades pr on pr.codigo = t.prioridadCodigo\r\nleft join whs.dimAgentes a on a.codigo = t.agenteCodigo\r\nleft join whs.dimSla sla on ((sla.companyid = t.companiaCodigo) or (sla.nombre like '%Default%')) and sla.isactive = 1\r\nleft join (\r\n                select id codigo,\r\n            min(created_at) FechaPrimerRespuesta\r\n            from stg.Conversaciones \r\n            group by id\r\n            ) presp on presp.codigo = t.codigo\r\nleft join whs.factTickets wt on wt.codigo = t.codigo\r\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"codigo"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "codigo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "codigo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "fechaAlta",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "fechaAlta",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "fechaModificacion",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "fechaModificacion",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "horasDiferecia",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "horasDiferecia",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "minutosDiferencia",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "minutosDiferencia",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "companiaId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "companiaId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "estadoId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "estadoId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "tipoId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "tipoId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "productoId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "productoId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "grupoId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "grupoId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "origenId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "origenId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "prioridadId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "prioridadId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "agenteId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "agenteId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "slaId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "slaId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SlaResolucion",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 7,
											"precision": 21
										},
										"sink": {
											"name": "SlaResolucion",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "SlaRespuesta",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 7,
											"precision": 21
										},
										"sink": {
											"name": "SlaRespuesta",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 4,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "FechaPrimerRespuesta",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "FechaPrimerRespuesta",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "stgTickets",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "factTickets",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"nombre": {
						"type": "String"
					},
					"IdParameter": {
						"type": "String"
					}
				},
				"folder": {
					"name": "FreshDesk"
				},
				"annotations": [],
				"lastPublishTime": "2025-01-14T15:43:20Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/stgTickets')]",
				"[concat(variables('factoryId'), '/datasets/factTickets')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Api_Agentes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ApiAgente",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "APIs"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ApiAgente')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EfleetClientes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EfleetDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/Efleet"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "contact_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "description",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "deleted_at",
						"type": "timestamp",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "created_at",
						"type": "timestamp",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "updated_at",
						"type": "timestamp",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "web",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "business_name",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "fantasy_name",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "group",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "classification",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "first_credit_limit",
						"type": "double",
						"precision": 0,
						"scale": 2
					},
					{
						"name": "second_credit_limit",
						"type": "double",
						"precision": 0,
						"scale": 2
					},
					{
						"name": "operation_type_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "invoice_type_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "client_state_type_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "client_trade_type_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "client_origin_type_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "payment_deadline",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "client_iibb_type_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "aldnet_account_number",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "aldnet_account_code",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "aldnet_account_test_code",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "client_type_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "synched",
						"type": "tinyint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "vendor_user_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "operator_user_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "client_group_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "send_campaign",
						"type": "tinyint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "campaign_subcontact_type_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "is_risk_client",
						"type": "tinyint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "send_survey",
						"type": "tinyint",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "clients"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EfleetDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EfleetContratos')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EfleetDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/Efleet"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "name",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "contract_type_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "contract_origin_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "hansa_ID",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "hansa_service_num",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "hansa_cu_num",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "hansa_created",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "hansa_created_user",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "hansa_start_date",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "hansa_end_date",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "client_approval_username",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "client_approval_date",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "client_estimated_fleet",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "client_first_limit",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "client_second_limit",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "autocorp_approval_username",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "autocorp_approval_date",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "autocorp_commercial_username",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "autocorp_implementation_username",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "autocorp_post_sale_username",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "comments",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "deleted_at",
						"type": "timestamp",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "created_at",
						"type": "timestamp",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "updated_at",
						"type": "timestamp",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "contact_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "synched",
						"type": "tinyint",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "contracts"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EfleetDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EfleetOrdenTrabajoCategoria')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EfleetDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/Efleet"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "section_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "name",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "description",
						"type": "mediumtext",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "deleted_at",
						"type": "timestamp",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "created_at",
						"type": "timestamp",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "updated_at",
						"type": "timestamp",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "categories"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EfleetDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EfleetOrdenTrabajoOrigen')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EfleetDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/Efleet"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "name",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "hansa_code",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "deleted_at",
						"type": "timestamp",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "created_at",
						"type": "timestamp",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "updated_at",
						"type": "timestamp",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "work_order_origins"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EfleetDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EfleetOrdenTrabajoTipo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EfleetDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/Efleet"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "name",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "hansa_code",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "deleted_at",
						"type": "timestamp",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "created_at",
						"type": "timestamp",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "updated_at",
						"type": "timestamp",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "workflow_code",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "card_color",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "font_color",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "accept_multiple",
						"type": "tinyint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "os_type_hansa_code",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "allow_tasks_added",
						"type": "tinyint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "default_work_order_origin_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "default_work_order_task_action_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "initial_detail",
						"type": "tinyint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "materials_price_enable",
						"type": "tinyint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "work_force_price_enable",
						"type": "tinyint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "default_provider_type_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "default_reason",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "budget_attachment_required",
						"type": "tinyint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "default_voucher_type_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "payment_deadline_change",
						"type": "tinyint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "total_price_enable",
						"type": "tinyint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "freshdesk_type",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "mobile_name",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "send_survey",
						"type": "tinyint",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "work_order_types"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EfleetDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EfleetOrdenTrabajoTipoGasto')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EfleetDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/Efleet"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "name",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "hansa_code",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "deleted_at",
						"type": "timestamp",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "created_at",
						"type": "timestamp",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "updated_at",
						"type": "timestamp",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "work_order_expense_types"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EfleetDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EfleetOrdenesTrabajo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EfleetDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/Efleet"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "name",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "state",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "deleted_at",
						"type": "timestamp",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "created_at",
						"type": "timestamp",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "updated_at",
						"type": "timestamp",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "hansa_code",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "work_order_type_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "work_order_origin_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "reason",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "internal_code",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "number",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "plate",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "contract_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "km",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "is_estimated",
						"type": "tinyint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "driver_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "contact_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "contact_name",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "contact_email",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "contact_phone",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "work_order_expense_type_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "user_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "shift_date",
						"type": "datetime",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "location_lat",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "location_lng",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "hansa_activity_code",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "workforce_price",
						"type": "double",
						"precision": 0,
						"scale": 2
					},
					{
						"name": "materials_price",
						"type": "double",
						"precision": 0,
						"scale": 2
					},
					{
						"name": "total_price",
						"type": "double",
						"precision": 0,
						"scale": 2
					},
					{
						"name": "workforce_s_iva_price",
						"type": "double",
						"precision": 0,
						"scale": 2
					},
					{
						"name": "materials_s_iva_price",
						"type": "double",
						"precision": 0,
						"scale": 2
					},
					{
						"name": "total_s_iva_price",
						"type": "double",
						"precision": 0,
						"scale": 2
					},
					{
						"name": "workforce_discount",
						"type": "double",
						"precision": 0,
						"scale": 2
					},
					{
						"name": "materials_discount",
						"type": "double",
						"precision": 0,
						"scale": 2
					},
					{
						"name": "total_discount",
						"type": "double",
						"precision": 0,
						"scale": 2
					},
					{
						"name": "os_hansa_code",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "os_activity_code",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "location_province",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "location_state",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "location_address",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "is_approved",
						"type": "tinyint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "internal_code_type",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "booking_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "synched",
						"type": "tinyint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "custom_address",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "custom_address_lat",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "custom_address_lng",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "freshdesk_code",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "q_shift_sent",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "shift_additional_notes",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "freshdesk_code_validated",
						"type": "tinyint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "external_created_by",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "shift_mail_sent",
						"type": "tinyint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "booking_franchise",
						"type": "double",
						"precision": 0,
						"scale": 2
					},
					{
						"name": "insurance_franchise",
						"type": "double",
						"precision": 0,
						"scale": 2
					},
					{
						"name": "desired_shift_day",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "desired_shift_hour",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "last_user_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "freshdesk_created_at",
						"type": "date",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "survey_sent",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "close_date",
						"type": "datetime",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "work_orders"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EfleetDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EfleetOrdenesTrabajoTareas')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EfleetDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/Efleet"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "work_order_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "task_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "work_order_task_action_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "workforce_price",
						"type": "double",
						"precision": 0,
						"scale": 2
					},
					{
						"name": "materials_price",
						"type": "double",
						"precision": 0,
						"scale": 2
					},
					{
						"name": "total_price",
						"type": "double",
						"precision": 0,
						"scale": 2
					},
					{
						"name": "workforce_s_iva_price",
						"type": "double",
						"precision": 0,
						"scale": 2
					},
					{
						"name": "materials_s_iva_price",
						"type": "double",
						"precision": 0,
						"scale": 2
					},
					{
						"name": "total_s_iva_price",
						"type": "double",
						"precision": 0,
						"scale": 2
					},
					{
						"name": "workforce_discount",
						"type": "double",
						"precision": 0,
						"scale": 2
					},
					{
						"name": "materials_discount",
						"type": "double",
						"precision": 0,
						"scale": 2
					},
					{
						"name": "total_discount",
						"type": "double",
						"precision": 0,
						"scale": 2
					},
					{
						"name": "comments",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "deleted_at",
						"type": "timestamp",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "created_at",
						"type": "timestamp",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "updated_at",
						"type": "timestamp",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "rebill",
						"type": "double",
						"precision": 0,
						"scale": 2
					},
					{
						"name": "iva_sell_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "iva_buy_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "work_order_tasks"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EfleetDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EfleetTareas')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EfleetDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/Efleet"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "parent_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "category_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "name",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "hansa_code",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "description",
						"type": "mediumtext",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "deleted_at",
						"type": "timestamp",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "created_at",
						"type": "timestamp",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "updated_at",
						"type": "timestamp",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "related_task_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "iva_sell_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "iva_buy_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "comments",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "materials_account_cost",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "workforce_account_cost",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "total_account_cost",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "searchable",
						"type": "tinyint",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "tasks"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EfleetDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EfleetVehiculo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "EfleetDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/Efleet"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "contract_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "policy_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "authorization_matrix_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "plate",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "description",
						"type": "mediumtext",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "hansa_start_date",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "hansa_end_date",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "hansa_flota",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "hansa_active",
						"type": "tinyint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "deleted_at",
						"type": "timestamp",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "created_at",
						"type": "timestamp",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "updated_at",
						"type": "timestamp",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "code",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "color",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "chassis",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "motor_number",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "year",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "plate_date",
						"type": "date",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "fire_extinguisher_due_date",
						"type": "date",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "vtv_due_date",
						"type": "date",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "cardoc_due_date",
						"type": "date",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "warranty_up_to_km",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "warranty_up_to_date",
						"type": "date",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "warranty_state",
						"type": "tinyint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "is_fleet_owner",
						"type": "tinyint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "last_km",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "last_km_origin",
						"type": "enum",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "last_km_date",
						"type": "date",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "service_last_km",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "service_origin",
						"type": "enum",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "service_last_date",
						"type": "date",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "condition_type",
						"type": "enum",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "category_client",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "group_category_client",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "fuel_card_number",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "toll_card_number",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "has_circulation_documents",
						"type": "tinyint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "insurance_ammount",
						"type": "double",
						"precision": 0,
						"scale": 2
					},
					{
						"name": "version_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "vehicle_state_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "client_structure_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "insurance_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "gps_provider_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "stereo_code",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "has_duplicated_key",
						"type": "tinyint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "gps_vehicle_number",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "gps_detail",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "gps_ammount",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "vtv_last_date",
						"type": "date",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "duplicated_key_date",
						"type": "date",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "vtv_last_city_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "plate_city_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "is_owner",
						"type": "enum",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "gps_is_visible",
						"type": "tinyint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "owner_name",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "owner_contact_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "maintenance_plan_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "leasing_duedate",
						"type": "date",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "rto_due_date",
						"type": "date",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "vtv_km_expiration",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "synched",
						"type": "tinyint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "fuel_provider",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "pledgde_duedate",
						"type": "date",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "pledgde_closure_date",
						"type": "date",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "pledgde_number",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "buyer_purchase_date",
						"type": "date",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "buyer_transfer_date",
						"type": "date",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "buyer_comments",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "pledge_contact_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "leasing_contact_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "buyer_contact_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "service_last_task_id",
						"type": "bigint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "insurance_start_date",
						"type": "date",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "send_expiration_mailing",
						"type": "tinyint",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "last_mailing_date",
						"type": "date",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "last_mailing_email",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "mailing_day",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "last_mailing_status",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "version_hansa_code",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "hansa_code",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "last_expiration_check",
						"type": "datetime",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "vtv_caba_text",
						"type": "varchar",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "infoauto_price",
						"type": "decimal",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "infoauto_price_date",
						"type": "datetime",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "vehicles"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/EfleetDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FreshAgentes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FreshDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/Fresh"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "name",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "id",
						"type": "double",
						"precision": 0,
						"scale": 31
					}
				],
				"typeProperties": {
					"tableName": "agent_table"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FreshDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FreshCompanias')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FreshDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/Fresh"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id",
						"type": "double",
						"precision": 0,
						"scale": 31
					},
					{
						"name": "name",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "description",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "note",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "domains",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "created_at",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "updated_at",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "health_score",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "account_tier",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "renewal_date",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "industry",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "custom_fields.estado_crediticio",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "custom_fields.cuit",
						"type": "double",
						"precision": 0,
						"scale": 31
					}
				],
				"typeProperties": {
					"tableName": "freshdesk_companies"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FreshDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FreshEstados')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FreshDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/Fresh"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "name",
						"type": "text",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "status_table"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FreshDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FreshGrupos')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FreshDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/Fresh"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "name",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "id",
						"type": "double",
						"precision": 0,
						"scale": 31
					}
				],
				"typeProperties": {
					"tableName": "group_table"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FreshDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FreshOrigenes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FreshDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/Fresh"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "name",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "id",
						"type": "int",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "source_table"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FreshDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FreshPrioridades')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FreshDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/Fresh"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "name",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "id",
						"type": "int",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "priority_table"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FreshDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FreshProductos')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FreshDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/Fresh"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "name",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "id",
						"type": "double",
						"precision": 0,
						"scale": 31
					}
				],
				"typeProperties": {
					"tableName": "product_table"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FreshDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FreshTickets')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FreshDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/Fresh"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "cc_emails",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "fwd_emails",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "reply_cc_emails",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ticket_cc_emails",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "ticket_bcc_emails",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "fr_escalated",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "spam",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "email_config_id",
						"type": "double",
						"precision": 0,
						"scale": 31
					},
					{
						"name": "group_id",
						"type": "double",
						"precision": 0,
						"scale": 31
					},
					{
						"name": "priority",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "requester_id",
						"type": "double",
						"precision": 0,
						"scale": 31
					},
					{
						"name": "responder_id",
						"type": "double",
						"precision": 0,
						"scale": 31
					},
					{
						"name": "source",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "company_id",
						"type": "double",
						"precision": 0,
						"scale": 31
					},
					{
						"name": "status",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "subject",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "association_type",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "support_email",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "to_emails",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "product_id",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "id",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "type",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "due_by",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "fr_due_by",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "is_escalated",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "custom_fields",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "created_at",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "updated_at",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "associated_tickets_count",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "tags",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "nr_due_by",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "nr_escalated",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "form_id",
						"type": "double",
						"precision": 0,
						"scale": 31
					},
					{
						"name": "cf_patente",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "cf_id_efleet",
						"type": "double",
						"precision": 0,
						"scale": 31
					},
					{
						"name": "cf_generar_ot_efleet",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "cf_kilometraje",
						"type": "double",
						"precision": 0,
						"scale": 31
					},
					{
						"name": "cf_obs_efleet",
						"type": "text",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "cf_motivo_de_reclamo",
						"type": "text",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "freshdesk_tickets"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FreshDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FreshTipos')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FreshDB",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/Fresh"
				},
				"annotations": [],
				"type": "AzureMySqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 0,
						"scale": 0
					},
					{
						"name": "name",
						"type": "text",
						"precision": 0,
						"scale": 0
					}
				],
				"typeProperties": {
					"tableName": "ticket_type"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FreshDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Fresh_Conversasiones')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ApiConversariones",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "APIs"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ApiConversariones')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Fresh_SLA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "APIFresh",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "APIs"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/APIFresh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Fresh_Tickets')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ApiTickets",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "APIs"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ApiTickets')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TicketsCnsolidados_xslx')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Storege_Fresh",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Source/Fresh/Storege"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Hoja1",
					"location": {
						"type": "AzureFileStorageLocation",
						"fileName": "Freshdesk_Tickets_Consolidado_completo.xlsx"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "cc_emails",
						"type": "String"
					},
					{
						"name": "fwd_emails",
						"type": "String"
					},
					{
						"name": "reply_cc_emails",
						"type": "String"
					},
					{
						"name": "ticket_cc_emails",
						"type": "String"
					},
					{
						"name": "ticket_bcc_emails",
						"type": "String"
					},
					{
						"name": "fr_escalated",
						"type": "String"
					},
					{
						"name": "spam",
						"type": "String"
					},
					{
						"name": "email_config_id",
						"type": "String"
					},
					{
						"name": "group_id",
						"type": "String"
					},
					{
						"name": "priority",
						"type": "String"
					},
					{
						"name": "requester_id",
						"type": "String"
					},
					{
						"name": "responder_id",
						"type": "String"
					},
					{
						"name": "source",
						"type": "String"
					},
					{
						"name": "company_id",
						"type": "String"
					},
					{
						"name": "status",
						"type": "String"
					},
					{
						"name": "subject",
						"type": "String"
					},
					{
						"name": "association_type",
						"type": "String"
					},
					{
						"name": "support_email",
						"type": "String"
					},
					{
						"name": "to_emails",
						"type": "String"
					},
					{
						"name": "product_id",
						"type": "String"
					},
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "type",
						"type": "String"
					},
					{
						"name": "due_by",
						"type": "String"
					},
					{
						"name": "fr_due_by",
						"type": "String"
					},
					{
						"name": "is_escalated",
						"type": "String"
					},
					{
						"name": "created_at",
						"type": "String"
					},
					{
						"name": "updated_at",
						"type": "String"
					},
					{
						"name": "associated_tickets_count",
						"type": "String"
					},
					{
						"name": "tags",
						"type": "String"
					},
					{
						"name": "form_id",
						"type": "String"
					},
					{
						"name": "nr_due_by",
						"type": "String"
					},
					{
						"name": "nr_escalated",
						"type": "String"
					},
					{
						"name": "cf_patente",
						"type": "String"
					},
					{
						"name": "cf_id_efleet",
						"type": "String"
					},
					{
						"name": "cf_generar_ot_efleet",
						"type": "String"
					},
					{
						"name": "cf_kilometraje",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Storege_Fresh')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dimAgentes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlAutocorpDw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DW/Dimensiones"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "codigo",
						"type": "varchar"
					},
					{
						"name": "nombre",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "whs",
					"table": "dimAgentes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlAutocorpDw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dimClientes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlAutocorpDw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DW/Dimensiones"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "codigo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "nombre",
						"type": "varchar"
					},
					{
						"name": "empresa",
						"type": "varchar"
					},
					{
						"name": "grupo",
						"type": "varchar"
					},
					{
						"name": "clasificacion",
						"type": "varchar"
					},
					{
						"name": "primerLimiteDecredito",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "segundoLimiteDeCredito",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "tipoOperacion",
						"type": "varchar"
					},
					{
						"name": "tipoComprobante",
						"type": "varchar"
					},
					{
						"name": "tipoCliente",
						"type": "varchar"
					},
					{
						"name": "estadoCliente",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "whs",
					"table": "dimClientes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlAutocorpDw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dimCompanias')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlAutocorpDw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DW/Dimensiones"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "whs",
					"table": "dimCompanias"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlAutocorpDw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dimContratos')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlAutocorpDw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DW/Dimensiones"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "codigo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "nombre",
						"type": "varchar"
					},
					{
						"name": "tipoContrato",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "whs",
					"table": "dimContratos"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlAutocorpDw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dimEstados')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlAutocorpDw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DW/Dimensiones"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "whs",
					"table": "dimEstados"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlAutocorpDw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dimGrupos')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlAutocorpDw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DW/Dimensiones"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "codigo",
						"type": "varchar"
					},
					{
						"name": "nombre",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "whs",
					"table": "dimGrupos"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlAutocorpDw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dimOrdenTrabajoCategorias')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlAutocorpDw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DW/Dimensiones"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "codigo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "nombre",
						"type": "varchar"
					},
					{
						"name": "descripcion",
						"type": "varchar"
					},
					{
						"name": "seccionNombre",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "whs",
					"table": "dimOrdenTrabajoCategorias"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlAutocorpDw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dimOrdenTrabajoOrigen')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlAutocorpDw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DW/Dimensiones"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "name",
						"type": "varchar"
					},
					{
						"name": "hansacode",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "whs",
					"table": "dimOrdenTrabajoOrgien"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlAutocorpDw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dimOrdenTrabajoTipo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlAutocorpDw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DW/Dimensiones"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "codigo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "nombre",
						"type": "varchar"
					},
					{
						"name": "hansacode",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "whs",
					"table": "dimOrdenTrabajoTipo"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlAutocorpDw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dimOrdenTrabajoTipoGasto')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlAutocorpDw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DW/Dimensiones"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "codigo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "nombre",
						"type": "varchar"
					},
					{
						"name": "hansacode",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "whs",
					"table": "dimOrdenTabajoTipoGasto"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlAutocorpDw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dimOrdenesTrabajo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlAutocorpDw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DW/Dimensiones"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "codigo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "nombre",
						"type": "varchar"
					},
					{
						"name": "estado",
						"type": "varchar"
					},
					{
						"name": "fechaEliminacion",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "fechaCreacion",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "fechaActualizacion",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "hansaCode",
						"type": "varchar"
					},
					{
						"name": "codigoTipoOrdenTrabajo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "codigoOrdenTrabajoOriginal",
						"type": "int",
						"precision": 10
					},
					{
						"name": "razon",
						"type": "varchar"
					},
					{
						"name": "codigoInterno",
						"type": "varchar"
					},
					{
						"name": "numero",
						"type": "int",
						"precision": 10
					},
					{
						"name": "patente",
						"type": "varchar"
					},
					{
						"name": "codigoContrato",
						"type": "int",
						"precision": 10
					},
					{
						"name": "km",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "estimada",
						"type": "bit"
					},
					{
						"name": "codigoTipoGasto",
						"type": "int",
						"precision": 10
					},
					{
						"name": "codigoUsuario",
						"type": "int",
						"precision": 10
					},
					{
						"name": "codigoTicket",
						"type": "varchar"
					},
					{
						"name": "codigoVehiculo",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "whs",
					"table": "dimOrdenesTrabajo"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlAutocorpDw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dimOrigenes')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlAutocorpDw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DW/Dimensiones"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "codigo",
						"type": "varchar"
					},
					{
						"name": "nombre",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "whs",
					"table": "dimOrigenes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlAutocorpDw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dimPrioridades')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlAutocorpDw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DW/Dimensiones"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "codigo",
						"type": "varchar"
					},
					{
						"name": "nombre",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "whs",
					"table": "dimPrioridades"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlAutocorpDw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dimProductos')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlAutocorpDw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DW/Dimensiones"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "nombre",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "whs",
					"table": "dimProductos"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlAutocorpDw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dimSla')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlAutocorpDw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DW/Dimensiones"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "codigo",
						"type": "varchar"
					},
					{
						"name": "nombre",
						"type": "varchar"
					},
					{
						"name": "descipcion",
						"type": "varchar"
					},
					{
						"name": "isactive",
						"type": "bit"
					},
					{
						"name": "isdefault",
						"type": "bit"
					},
					{
						"name": "posicion",
						"type": "int",
						"precision": 10
					},
					{
						"name": "fechaAlta",
						"type": "varchar"
					},
					{
						"name": "fechaModificacion",
						"type": "varchar"
					},
					{
						"name": "companyid",
						"type": "varchar"
					},
					{
						"name": "slaTargetPriority1RespondWithin",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "slaTargerPriority1ResolveWithin",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "slaTargetPriority2RespondWithin",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "slaTargerPriority2ResolveWithin",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "slaTargetPriority3RespondWithin",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "slaTargerPriority3ResolveWithin",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "slaTargetPriority4RespondWithin",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "slaTargerPriority4ResolveWithin",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "escalationReminderResolutionEscalationTime",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "escalationReminderResolutionAgentids",
						"type": "varchar"
					},
					{
						"name": "escalationResolutionLevel1EscalationTime",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "escalationResolutionLevel1AgentId",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "whs",
					"table": "dimSla"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlAutocorpDw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dimTareas')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlAutocorpDw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DW/Dimensiones"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "codigo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "nombre",
						"type": "varchar"
					},
					{
						"name": "descripcion",
						"type": "varchar"
					},
					{
						"name": "codigoCategoria",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "whs",
					"table": "dimTareas"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlAutocorpDw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dimTiposTickets')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlAutocorpDw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DW/Dimensiones"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "codigo",
						"type": "varchar"
					},
					{
						"name": "nombre",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "whs",
					"table": "dimTiposTicket"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlAutocorpDw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dimVehiculos')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlAutocorpDw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DW/Dimensiones"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "anio",
						"type": "int",
						"precision": 10
					},
					{
						"name": "estadovehiculo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "fechavencimientoVTV",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "garantíaactualizadakm",
						"type": "int",
						"precision": 10
					},
					{
						"name": "garantíaactualizadadia",
						"type": "date"
					},
					{
						"name": "estadogarantia",
						"type": "int",
						"precision": 10
					},
					{
						"name": "espropietarioflota",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ultimokm",
						"type": "int",
						"precision": 10
					},
					{
						"name": "fechaultimokm",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ultimafechaservicio",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "servicioultimokilometraje",
						"type": "int",
						"precision": 10
					},
					{
						"name": "categoriacliente",
						"type": "varchar"
					},
					{
						"name": "grupocategoriacliente",
						"type": "varchar"
					},
					{
						"name": "tienedocumentoscirculacion",
						"type": "int",
						"precision": 10
					},
					{
						"name": "seguroid",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ultimafechavtv",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "nombrepropietario",
						"type": "text"
					},
					{
						"name": "nombrecontactoid",
						"type": "int",
						"precision": 10
					},
					{
						"name": "contratoarendamientoid",
						"type": "int",
						"precision": 10
					},
					{
						"name": "fechavencimientoarendamiento",
						"type": "int",
						"precision": 10
					},
					{
						"name": "fechavencimientorto",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "contactocompradorid",
						"type": "int",
						"precision": 10
					},
					{
						"name": "servicioultimatareaid",
						"type": "int",
						"precision": 10
					},
					{
						"name": "fechainicioseguro",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "fechaprecioinfoauto",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "precioinfoauto",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					}
				],
				"typeProperties": {
					"schema": "whs",
					"table": "dimVehiculos"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlAutocorpDw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/factOrdenesTrabajo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlAutocorpDw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DW/Echos"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "codigo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "workOrderId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TareaId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "costoPersonal",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "costoMaterial",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "costoTotal",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "costoPersonalSinIva",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "costoMaterialSinIva",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "costoTotalSinIva",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "descuentoPersonal",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "decuentoMaterial",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "decuentoTotal",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "fechaCreacion",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "fechaUltimaActualizacion",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "whs",
					"table": "factOrdenesTrabajo"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlAutocorpDw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/factTickets')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlAutocorpDw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DW/Echos"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "codigo",
						"type": "varchar"
					},
					{
						"name": "fechaAlta",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "fechaModificacion",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "horasDiferecia",
						"type": "int",
						"precision": 10
					},
					{
						"name": "minutosDiferencia",
						"type": "int",
						"precision": 10
					},
					{
						"name": "companiaId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "estadoId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "tipoId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "productoId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "grupoId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "origenId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "prioridadId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "agenteId",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "whs",
					"table": "factTickets"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlAutocorpDw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/stgOrdenesTrabajoTareas')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlAutocorpDw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staiging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "codigo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "codigoWorkOrder",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Tarea",
						"type": "varchar"
					},
					{
						"name": "categoria",
						"type": "varchar"
					},
					{
						"name": "costoPersonal",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "costoMaterial",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "costoTotal",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "costoPersonalSinIva",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "costoMaterialSinIva",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "costoTotalSinIva",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "descuentoPersonal",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "decuentoMaterial",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "decuentoTotal",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "fechaCreacion",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "fechaUltimaActualizacion",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "stg",
					"table": "OrdenesTrabajoTareas"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlAutocorpDw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/stgTickets')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlAutocorpDw",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Staiging"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "codigo",
						"type": "varchar"
					},
					{
						"name": "fechaAlta",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "fechaModificacion",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "horasDiferecia",
						"type": "int",
						"precision": 10
					},
					{
						"name": "minutosDiferencia",
						"type": "int",
						"precision": 10
					},
					{
						"name": "companiaCodigo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "estadoCodigo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "tipoCodigo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "productoCodigo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "grupoCodigo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "origenCodigo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "prioridadCodigo",
						"type": "int",
						"precision": 10
					},
					{
						"name": "agenteCodigo",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "stg",
					"table": "Tickets"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlAutocorpDw')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AF_DW')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "[parameters('AF_DW_properties_typeProperties_functionAppUrl')]",
					"authentication": "Anonymous",
					"functionKey": {
						"type": "SecureString",
						"value": "[parameters('AF_DW_functionKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AF_InyectarTickets')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "[parameters('AF_InyectarTickets_properties_typeProperties_functionAppUrl')]",
					"authentication": "Anonymous",
					"functionKey": {
						"type": "SecureString",
						"value": "[parameters('AF_InyectarTickets_functionKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/APIFresh')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('APIFresh_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('APIFresh_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('APIFresh_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ApiAgente')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('ApiAgente_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('ApiAgente_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ApiAgente_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ApiConversariones')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('ApiConversariones_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('ApiConversariones_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ApiConversariones_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ApiTickets')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('ApiTickets_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EfleetDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureMySql",
				"typeProperties": {
					"connectionString": "[parameters('EfleetDB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FreshDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureMySql",
				"typeProperties": {
					"connectionString": "[parameters('FreshDB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Logs Fabric')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('Logs Fabric_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlAutocorpDw')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('SqlAutocorpDw_properties_typeProperties_server')]",
					"database": "[parameters('SqlAutocorpDw_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('SqlAutocorpDw_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SqlAutocorpDw_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Storege_Fresh')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFileStorage",
				"typeProperties": {
					"connectionString": "[parameters('Storege_Fresh_connectionString')]",
					"fileShare": "freshdesk-fileshare"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Diario 5am for 4 hours')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "001-Orquestador",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 4,
						"startTime": "2025-01-04T05:08:00",
						"timeZone": "Argentina Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/001-Orquestador')]"
			]
		}
	]
}